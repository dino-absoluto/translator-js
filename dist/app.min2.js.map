{"version":3,"file":"app.min2.js","sources":["../src/get/index.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Series } from './base'\n/* -imports */\n\nconst engines = Promise.all([\n  import('./engine-syosetu'),\n  import('./engine-kakuyomu')\n].map(engine => engine.then(e => e.default)))\n\nexport default async (options) => {\n  const meta = Series.parseMeta(options)\n  const engine = (async () => {\n    for (const Engine of await engines) {\n      if (Engine.test(meta.sourceURL)) {\n        return new Engine(meta, true)\n      }\n    }\n  })()\n  if (!engine) {\n    throw new Error('Failed to find a matching engine')\n  }\n  return engine\n}\n"],"names":["engines","Promise","all","map","engine","then","e","default","async","meta","Series","parseMeta","options","Engine","test","sourceURL","Error"],"mappings":"sQAwBA,MAAMA,QAAUC,QAAQC,IAAI,CAC1BD,wBAAO,kBACPA,wBAAO,mBACPE,IAAIC,GAAUA,EAAOC,KAAKC,GAAKA,EAAEC,WAEnC,gBAAeC,UACPC,EAAOC,iBAAOC,UAAUC,GACxBR,EAAS,eACR,MAAMS,WAAgBb,WACrBa,EAAOC,KAAKL,EAAKM,kBACZ,IAAIF,EAAOJ,GAAM,IAHf,OAOVL,QACG,IAAIY,MAAM,2CAEXZ"}