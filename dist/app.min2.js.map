{"version":3,"file":"app.min2.js","sources":["../src/get/base/patch.mjs","../src/get/base/chapter.mjs","../src/get/base/volume.mjs","../src/get/base/series.mjs","../src/get/engine-syosetu.mjs","../src/get/index.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\n/* -imports */\n\nexport default class Patch {\n  constructor (props = {}) {\n    props = Object.assign({}, props)\n    Object.defineProperties(this, {\n      props: { writable: true, value: props }\n    })\n  }\n\n  async patch (patch, run = true) {\n    if (typeof patch !== 'object') {\n      return\n    }\n    let last = this\n    let copy = new this.constructor(Object.assign({}, last.props, {\n      last, patch\n    }))\n    if (run) {\n      await copy.run()\n    }\n    return copy\n  }\n\n  async run () {\n    const { props } = this\n    const { last, patch } = props\n    delete props.last\n    delete props.patch\n    if (!patch) {\n      return\n    }\n    if (await this.shouldUpdate(last, patch)) {\n      await this.willUpdate(last, patch)\n      this.props = Object.assign({}, this.props, patch)\n      await this.update(last)\n      await this.didUpdate()\n    } else {\n      this.props = Object.assign({}, this.props, patch)\n    }\n  }\n\n  async isPending () {\n    const { props } = this\n    return !!(props.patch && await this.shouldUpdate(props.last, props.patch))\n  }\n\n  shouldUpdate (last, patch) {\n    return !!(patch && Object.getOwnPropertyNames(patch).length !== 0)\n  }\n\n  willUpdate (last, patch) {\n  }\n\n  update (last) {\n  }\n\n  didUpdate () {\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport Patch from './patch'\nimport path from 'path'\nimport fs from 'fs'\nimport filenamify from 'filenamify'\nimport makeDir from 'make-dir'\nimport chalk from 'chalk'\n/* -imports */\n\nexport class FileInfo {\n  constructor (options) {\n    const { chapter } = options\n    Object.defineProperties(this, {\n      chapter: { value: chapter },\n      integrity: { enumerable: true, value: options.integrity },\n      fname: { enumerable: true, value: options.fname },\n      buffer: { writable: true, value: options.buffer }\n    })\n  }\n\n  get relative () {\n    return path.join(this.chapter.dirRelative, this.fname)\n  }\n\n  get absolute () {\n    return path.join(this.chapter.dirAbsolute, this.fname)\n  }\n\n  exists () {\n    try {\n      fs.accessSync(this.absolute)\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  async write (force = false) {\n    if (!this.buffer) {\n      return\n    }\n    if (typeof this.buffer === 'function') {\n      this.buffer = await this.buffer()\n    }\n    fs.writeFileSync(this.absolute, await this.buffer, {\n      flag: force ? 'w' : 'wx'\n    })\n  }\n\n  remove (force = false) {\n    const { relative } = this\n    if (relative.length > 0 && typeof relative === 'string') {\n      fs.unlinkSync(this.absolute)\n    }\n  }\n}\n\nexport default class Chapter extends Patch {\n  constructor (props) {\n    super(props)\n    this.props.files = props.files && props.files.map((data, index) => {\n      return new FileInfo(Object.assign({}, data, {\n        chapter: this\n      }))\n    })\n    Object.defineProperties(this, {\n      index: { get: () => this.props.index },\n      title: { enumerable: true, get: () => this.props.title },\n      files: { enumerable: true, get: () => this.props.files },\n      integrity: { enumerable: true, get: () => this.props.integrity },\n      volume: {\n        enumerable: true,\n        get: () => {\n          let vol = this.props.volume && this.props.volume.index\n          if (Number.isInteger(vol)) {\n            return vol\n          }\n        }\n      }\n    })\n  }\n\n  getName (fname) {\n    return filenamify(`${this.prefix} ${fname}`)\n  }\n\n  get prefix () {\n    return `${\n      this.props.index.toString().padStart(3, '0')\n    }`\n  }\n\n  get dirRelative () {\n    const { volume } = this.props\n    if (volume) {\n      return volume.relative\n    }\n    return ''\n  }\n\n  get dirAbsolute () {\n    const { volume } = this.props\n    if (volume) {\n      return volume.absolute\n    }\n    if (this.props.base) {\n      return this.props.base\n    }\n    return process.cwd()\n  }\n\n  async shouldUpdate (last, patch) {\n    {\n      /* ignore files */\n      let names = Object.getOwnPropertyNames(patch)\n      if (names.length === 1 && names[0] === 'files') {\n        return false\n      }\n    }\n    if (patch.integrity && patch.integrity !== last.integrity) {\n      return true\n    }\n    if (patch.index && patch.index !== last.index) {\n      return true\n    }\n    if (last.files) {\n      for (const info of last.files) {\n        if (!await info.exists()) {\n          return true\n        }\n      }\n      if (patch.files) {\n        for (const [info, index] of last.files.entries()) {\n          const pInfo = patch.files[index]\n          if (info.integrity !== pInfo.integrity) {\n            return true\n          }\n          if (info.fname !== pInfo.fname) {\n            return true\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  async willUpdate (last, patch) {\n    super.willUpdate(...arguments)\n    const files = this.props.files\n    makeDir.sync(this.dirAbsolute)\n    if (!files) {\n      return\n    }\n    await Promise.all(files.map(info => {\n      try {\n        info.remove()\n      } catch (err) {\n      }\n    }))\n  }\n\n  update () {\n    const { props } = this\n    const files = [\n      {\n        fname: this.getName(`${props.title}.txt`),\n        integrity: undefined\n      }\n    ]\n    props.files = files\n  }\n\n  async didUpdate () {\n    const { props } = this\n    if (!props.files) {\n      return\n    }\n    props.files = props.files.map(info => new FileInfo(Object.assign({}, info, {\n      chapter: this\n    }, info)))\n    const { files } = props\n    makeDir.sync(this.dirAbsolute)\n    let promises = Promise.all(files.map(info => {\n      if (info.buffer) {\n        return info.write(props.overwrite)\n      }\n    }))\n    return promises\n  }\n\n  printInfo () {\n    const { props } = this\n    const { files } = props\n    console.log(chalk`  {gray ${this.prefix}} ${props.title}{green ${\n      files.length > 1 ? (' +' + (files.length - 1)) : ''\n    }}`)\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport Patch from './patch'\nimport path from 'path'\nimport filenamify from 'filenamify'\n/* -imports */\n\nexport default class Volume extends Patch {\n  constructor (props) {\n    super(props)\n    Object.defineProperties(this, {\n      index: { get: () => this.props.index },\n      title: { enumerable: true, get: () => this.props.title }\n    })\n  }\n\n  get base () {\n    const { props } = this\n    if (props.base) {\n      return path.resolve(props.base)\n    } else {\n      return process.cwd()\n    }\n  }\n\n  get filename () {\n    const { props } = this\n    const name = filenamify(`${\n      props.index.toString().padStart(2, '0')\n    } ${props.title}`)\n    return name\n  }\n\n  get relative () {\n    return this.filename\n  }\n\n  get absolute () {\n    return path.resolve(this.base, this.relative)\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport BaseChapter from './chapter'\nimport BaseVolume from './volume'\nimport Patch from './patch'\nimport path from 'path'\nimport fs from 'fs'\nimport makeDir from 'make-dir'\nimport filenamify from 'filenamify'\nimport chalk from 'chalk'\nimport readline from 'readline'\nimport util from 'util'\n/* -imports */\n\nconst clearLine = () => {\n  readline.clearLine(process.stdout, 0)\n  readline.cursorTo(process.stdout, 0)\n}\n\nconst print = (...argv) => {\n  process.stdout.write(util.format(...argv))\n}\n\nconst log = (...argv) => console.log(...argv)\n\nexport default class Series extends Patch {\n  constructor (props, parsed = false) {\n    parsed = parsed || (props.last && props.patch)\n    const meta = parsed ? props : Series.parseMeta(props)\n    super(meta)\n    props = this.props\n    if (props.volumes) {\n      const { Volume } = this\n      props.volumes = props.volumes.map((vol, index) => {\n        return new Volume(Object.assign({}, vol, {\n          index,\n          base: this.targetDir\n        }))\n      })\n    } else {\n      props.volumes = []\n    }\n    if (props.chapters) {\n      const { Chapter } = this\n      props.chapters = props.chapters.map((ch, index) => {\n        let vol = (Number.isInteger(ch.volume) && props.volumes[ch.volume])\n        return new Chapter(Object.assign({}, ch, {\n          index,\n          volume: vol\n        }))\n      })\n    } else {\n      props.chapters = []\n    }\n    Object.defineProperties(this, {\n      sourceURL: { enumerable: true, get: () => this.props.sourceURL },\n      volumes: { enumerable: true,\n        get: () =>\n          (this.props.volumes.length && this.props.volumes) || undefined },\n      chapters: { enumerable: true,\n        get: () =>\n          (this.props.chapters.length && this.props.chapters) || undefined }\n    })\n  }\n\n  get Chapter () {\n    return BaseChapter\n  }\n\n  get Volume () {\n    return BaseVolume\n  }\n\n  get targetDir () {\n    return path.resolve(this.props.targetDir)\n  }\n\n  shouldLog (level) {\n    return this.props.verbose && this.props.verbose >= level\n  }\n\n  static parseMeta (props) {\n    let accepted = {\n      verbose: props.verbose && (parseInt(props.verbose) || 1),\n      overwrite: props.overwrite,\n      last: props.last,\n      patch: props.patch\n    }\n    try {\n      let url = new URL(props.source)\n      let name = props.name || filenamify(`${url.host}${url.pathname}`)\n      let targetDir = path.resolve(props.chdir || '', name)\n      let data = {}\n      try {\n        let fname = path.join(targetDir, 'index.json')\n        let fdata = JSON.parse(fs.readFileSync(fname, 'utf8'))\n        Object.assign(data, fdata)\n      } catch (err) {\n      }\n      return Object.assign(data, {\n        sourceURL: url,\n        targetDir\n      }, accepted)\n    } catch (err) {\n      try {\n        let fname = path.resolve(path.join(props.source, 'index.json'))\n        let data = JSON.parse(fs.readFileSync(fname, 'utf8'))\n        let targetDir = path.dirname(fname)\n        data.sourceURL = new URL(data.sourceURL)\n        return Object.assign(data, {\n          targetDir\n        }, accepted)\n      } catch (error) {\n        throw error\n      }\n    }\n  }\n\n  shouldUpdate () {\n    return true\n  }\n\n  async willUpdate (last, patch) {\n    const { props, Volume, Chapter } = this\n    const { volumes, chapters } = patch\n    if (volumes) {\n      patch.volumes = await Promise.all(volumes.map(async (data, index) => {\n        let config = (props.volumes[index] && props.volumes[index].props) || {}\n        let vol = new Volume(Object.assign(config, {\n          index,\n          base: this.targetDir\n        }))\n        vol = await vol.patch(Object.assign({}, data, {\n          index\n        }))\n        return vol\n      }))\n    }\n    if (chapters) {\n      const defers = []\n      patch.chapters = await Promise.all(chapters.map(async (data, index) => {\n        let volume = Number.isInteger(data.volume) && patch.volumes[data.volume]\n        let config = (props.chapters[index] && props.chapters[index].props) || {}\n        let ch = new Chapter(Object.assign(config, {\n          index,\n          volume,\n          base: this.targetDir,\n          overwrite: props.overwrite\n        }))\n        if (!volume) {\n          // Vol matching failed\n        }\n        ch = await ch.patch(Object.assign({}, data, {\n          index,\n          volume,\n          base: this.targetDir\n        }), false)\n        if (await ch.isPending()) {\n          defers.push([ch, () => ch.run()])\n        } else {\n          await ch.run()\n        }\n        return ch\n      }))\n      /* defer tasks */\n      patch.defers = defers\n      patch.delta = chapters.length -\n        ((props.chapters && props.chapters.length) || 0)\n    }\n    return super.willUpdate(last, patch)\n  }\n\n  async saveIndex () {\n    const fpath = path.join(this.props.targetDir, 'index.json')\n    fs.writeFileSync(fpath, JSON.stringify(this, null, 1), 'utf8')\n  }\n\n  async update () {\n    const { props } = this\n    const fpath = path.join(props.targetDir, 'index.json')\n    await makeDir(props.targetDir)\n    fs.writeFileSync(fpath, JSON.stringify(this, null, 1), 'utf8')\n    if (props.defers && props.defers.length) {\n      const shouldLog = this.shouldLog(1)\n      const length = props.defers.length\n      const shrink = props.defers.length > 16\n      if (shouldLog) {\n        print(chalk`  {green [${\n          props.chapters.length}]} {green =>} `)\n        if (props.delta) {\n          print(chalk`{green New ${\n            props.delta}}{gray ,} `)\n        }\n        log(chalk`{red Updated ${props.defers.length}}`)\n      }\n      if (shrink) {\n        for (const [index, [, defer]] of props.defers.entries()) {\n          await defer()\n          await this.saveIndex()\n          if (shouldLog) {\n            clearLine()\n            print(chalk`  {green =>} {gray [${index + 1}/${length}]}`)\n          }\n        }\n        if (shouldLog) {\n          clearLine()\n          log(chalk`  {gray [${length}/${length}]}`)\n        }\n      } else {\n        for (const [index, [ch, defer]] of props.defers.entries()) {\n          void index\n          await defer()\n          if (shouldLog) {\n            await ch.printInfo()\n          }\n          await this.saveIndex()\n        }\n      }\n      this.saveIndex()\n      if (shouldLog) {\n        log(chalk`  {green Completed}`)\n      }\n      delete props.defers\n      delete props.delta\n    }\n  }\n\n  async refresh () {\n    if (this.shouldLog(1)) {\n      const maxWidth = process.stdout.columns\n      let output = path.relative('.', this.targetDir)\n      let width = 2 + 4 + String(this.sourceURL).length + output.length\n      print(chalk`{gray #} {blue ${this.sourceURL}}`)\n      if (width > maxWidth) {\n        log()\n      } else {\n        print(' ')\n      }\n      log(chalk`{green =>} ${output}`)\n    }\n    return this.fetch()\n  }\n\n  async fetch () {\n    return this.patch({})\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport cookie from 'cookie'\nimport mime from 'mime-types'\nimport { JSDOM } from 'jsdom'\nimport crypto from 'crypto'\nimport * as base from './base'\n/* -imports */\n\nconst got = (url, config = {}) => {\n  config.headers = Object.assign({}, config.headers)\n  if (/^novel18./.test(url.hostname)) {\n    config.headers.cookie = cookie.serialize('over18', 'yes')\n  }\n  return gotBase(url, config)\n}\n\nconst hash = (buffer) => {\n  const integrity = crypto.createHash('sha256')\n    .update(buffer, 'utf8')\n    .digest('base64')\n  return integrity\n}\n\nexport class Chapter extends base.Chapter {\n  async update () {\n    const { props } = this\n    const oldFiles = props.files\n    delete props.files\n    /* prioritize props.doc */\n    if (props.buffer && !props.doc) {\n      props.files = [\n        {\n          fname: this.getName(`${props.title}.txt`),\n          integity: undefined,\n          buffer: props.buffer\n        }\n      ]\n      return\n    }\n    let doc = props.doc\n    if (!doc) {\n      if (!props.sourceURL) {\n        return\n      }\n      doc = await (async () => {\n        let { window: { document: doc } } =\n        new JSDOM((await got(props.sourceURL)).body, { url: props.sourceURL })\n        return doc\n      })()\n    }\n    let files = []\n    let imgs = []\n    for (const img of doc.querySelectorAll('#novel_color img')) {\n      let node = doc.createTextNode(`![](${img.src})`)\n      img.parentNode.replaceChild(node, img)\n      imgs.push(img.src)\n    }\n    {\n      const buffer = await props.buffer\n      let text = buffer ? (\n        typeof buffer === 'function' ? await buffer() : buffer.toString()\n      ) : ''\n      const selectors = [\n        '.novel_subtitle',\n        '#novel_p',\n        '#novel_honbun',\n        '#novel_a'\n      ]\n      for (const sel of selectors) {\n        for (const node of doc.querySelectorAll(sel)) {\n          text += node.textContent + '\\n\\n-----\\n\\n'\n        }\n      }\n      files.push({\n        fname: this.getName(`${props.title}.txt`),\n        integity: undefined,\n        buffer: text\n      })\n    } /* -text */\n    {\n      let promises = imgs.map(async (url, index) => {\n        const get = async () => {\n          let { body: content, headers } = await got(url, { encoding: null })\n          let fname = `${\n            this.prefix\n          } image ${\n            String(index + 1).padStart(2, '0')\n          }.${\n            mime.extension(headers['content-type']) || 'jpg'\n          }`\n          return { content, fname }\n        }\n        let old = oldFiles && oldFiles[index + 1]\n        if (old && old.fname && old.integrity && old.integrity === url) {\n          return {\n            fname: old.fname,\n            integrity: url,\n            buffer: async () => {\n              return (await get()).content\n            }\n          }\n        }\n        let { fname, content } = await get()\n        return {\n          fname,\n          integrity: url,\n          buffer: content\n        }\n      })\n      imgs = await Promise.all(promises)\n      for (const info of imgs) {\n        files.push(info)\n      }\n    } /* -images */\n    props.files = files\n  }\n}\n\nexport class Volume extends base.Volume {\n}\n\nexport class Series extends base.Series {\n  constructor (props, ...argv) {\n    super(props, ...argv)\n    if (!Series.test(this.sourceURL)) {\n      throw new Error('Invalid URL')\n    }\n  }\n  static test (url) {\n    return /^((http|https):\\/\\/|)(ncode|novel18).syosetu.com\\/[^/]+\\/?$/.test(url)\n  }\n  get Chapter () { return Chapter }\n  get Volume () { return Volume }\n\n  async fetch () {\n    const url = this.sourceURL\n    let { window: { document: doc } } = new JSDOM((await got(url)).body, { url: url })\n    let volumes = []\n    let chapters = []\n    let description = ''\n    {\n      const title = doc.querySelector('.novel_title')\n        .textContent.trim()\n      const author = doc.querySelector('.novel_writername')\n        .textContent.trim().substr('作者：'.length)\n      description = `# ${title}\\nAuthor: ${author}\\n\\n`\n      let singular = false\n      {\n        let dnode = doc.querySelector('#novel_ex')\n        if (dnode != null) {\n          description += dnode.textContent\n        } else {\n          singular = true\n        }\n        description += '\\n\\n-----\\n\\n'\n      }\n      chapters.push({\n        title: 'Description',\n        integrity: Date.now(),\n        buffer: () => description,\n        doc: singular ? doc : undefined\n      })\n    } /* -description */\n    let volumeIndex = -1\n    let indexBox = doc.querySelector('.index_box')\n    if (indexBox == null) {\n      return this.setProps({\n        chapters\n      })\n    }\n    let chaptersAsync = []\n    for (const node of indexBox.children) {\n      if (node.classList.contains('chapter_title')) {\n        let title = node.textContent.trim()\n        volumes.push({\n          title\n        })\n        description += `\\n## ${title}\\n`\n        ++volumeIndex\n      } else if (node.classList.contains('novel_sublist2')) {\n        let volIndex = Number(volumeIndex)\n        chaptersAsync.push((async () => {\n          let { textContent: title, href: link } = (() => {\n            let anode = node.firstElementChild.firstElementChild\n            if (anode.nodeName.toLowerCase() !== 'a') {\n              anode = node.querySelector('a')\n            }\n            return anode\n          })()\n          title = title.trim()\n          description += `${\n            String(chaptersAsync.length + 1).padStart(3, '0')\n          } ${title}\\n`\n          if (link.startsWith('//')) {\n            link = url.protocol + link\n          } else if (link.startsWith('/')) {\n            link = new URL(link, url.origin)\n          }\n          return {\n            volume: volIndex,\n            sourceURL: link,\n            title,\n            integrity: (() => {\n              let date = (() => {\n                let date = node.lastElementChild\n                if (date.classList.contains('long_update')) {\n                  return date\n                } else {\n                  return node.querySelector('.long_update')\n                }\n              })()\n              let span = date.lastElementChild\n              if (span) {\n                return span.title.trim()\n              } else {\n                return date.innerHTML.trim()\n              }\n            })()\n          }\n        })())\n      } else {\n        /* unexpected node */\n      }\n    }\n    chapters[0].integrity = hash(description)\n    chapters = chapters.concat(await Promise.all(chaptersAsync))\n    return this.patch({\n      volumes,\n      chapters\n    })\n  }\n}\n\nexport default Series\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Series } from './base'\nimport Syosetu from './engine-syosetu'\n/* -imports */\n\nconst engines = [\n  Syosetu\n]\n\nexport default (options) => {\n  const meta = Series.parseMeta(options)\n  const engine = (() => {\n    for (const Engine of engines) {\n      if (Engine.test(meta.sourceURL)) {\n        return new Engine(meta, true)\n      }\n    }\n  })()\n  if (!engine) {\n    throw new Error('Failed to find a matching engine')\n  }\n  return engine\n}\n"],"names":["Patch","constructor","props","Object","assign","defineProperties","this","writable","value","patch","run","copy","last","shouldUpdate","willUpdate","update","didUpdate","getOwnPropertyNames","length","FileInfo","options","chapter","integrity","enumerable","fname","buffer","path","join","dirRelative","dirAbsolute","exists","fs","accessSync","absolute","error","force","writeFileSync","flag","remove","relative","unlinkSync","Chapter","files","map","data","index","get","title","volume","vol","Number","isInteger","getName","filenamify","prefix","toString","padStart","base","process","cwd","names","info","entries","pInfo","arguments","makeDir","sync","Promise","all","err","undefined","write","overwrite","printInfo","console","log","chalk","Volume","resolve","filename","clearLine","readline","stdout","cursorTo","print","argv","util","format","Series","parsed","parseMeta","volumes","targetDir","chapters","ch","sourceURL","BaseChapter","BaseVolume","shouldLog","level","verbose","accepted","parseInt","url","URL","source","name","host","pathname","chdir","fdata","JSON","parse","readFileSync","dirname","async","config","defers","isPending","push","delta","super","fpath","stringify","shrink","defer","saveIndex","maxWidth","columns","output","width","String","fetch","got","headers","test","hostname","cookie","serialize","gotBase","hash","crypto","createHash","digest","oldFiles","doc","integity","window","document","JSDOM","body","imgs","img","querySelectorAll","node","createTextNode","src","parentNode","replaceChild","text","selectors","sel","textContent","promises","content","encoding","mime","extension","old","Error","description","querySelector","trim","author","substr","singular","dnode","Date","now","volumeIndex","indexBox","setProps","chaptersAsync","children","classList","contains","volIndex","href","link","anode","firstElementChild","nodeName","toLowerCase","startsWith","protocol","origin","date","lastElementChild","span","innerHTML","concat","engines","Syosetu","meta","engine","Engine"],"mappings":"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"}