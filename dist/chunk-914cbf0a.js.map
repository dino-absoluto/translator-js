{"version":3,"file":"chunk-914cbf0a.js","sources":["../src/get/utils/hash.mjs","../src/get/utils/to-files.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport crypto from 'crypto'\n/* -imports */\n\nconst hash = (buffer) => {\n  const integrity = crypto.createHash('sha256')\n    .update(buffer, 'utf8')\n    .digest('base64')\n  return integrity\n}\n\nexport default hash\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport mime from 'mime-types'\nimport { JSDOM } from 'jsdom'\n/* -imports */\n\nconst replaceImages = (doc, selector) => {\n  let imgs = []\n  for (const img of doc.querySelectorAll(selector)) {\n    let node = doc.createTextNode(`![](${img.src})`)\n    img.parentNode.replaceChild(node, img)\n    imgs.push(img.src)\n  }\n  return imgs\n}\n\nconst getExternal = async (options = {}) => {\n  const { prefix, oldFiles, files, urls } = options\n  const offset = files.length\n  const got = options.got || gotBase\n  let promises = urls.map(async (url, index) => {\n    const get = async () => {\n      let { body: content, headers } = await got(url, { encoding: null })\n      let fname = `${\n        prefix\n      } image ${\n        String(index + 1).padStart(2, '0')\n      }.${\n        mime.extension(headers['content-type']) || 'jpg'\n      }`\n      return { content, fname }\n    }\n    let old = oldFiles && oldFiles[index + offset]\n    if (old && old.fname && old.integrity && old.integrity === url) {\n      return {\n        fname: old.fname,\n        integrity: url,\n        buffer: async () => {\n          return (await get()).content\n        }\n      }\n    }\n    let { fname, content } = await get()\n    return {\n      fname,\n      integrity: url,\n      buffer: content\n    }\n  })\n  let datas = await Promise.all(promises)\n  for (const info of datas) {\n    files.push(info)\n  }\n}\n\nexport default async (options, handleDoc) => {\n  const got = options.got || gotBase\n  const oldFiles = options.files\n  /* prioritize props.doc */\n  if (options.buffer && !options.doc) {\n    return [\n      {\n        fname: `${options.prefix} ${options.title}.txt`,\n        integity: undefined,\n        buffer: options.buffer\n      }\n    ]\n  }\n  let doc = options.doc\n  if (!doc) {\n    if (!options.sourceURL) {\n      return\n    }\n    doc = await (async () => {\n      let { window: { document: doc } } =\n      new JSDOM((await got(options.sourceURL)).body, { url: options.sourceURL })\n      return doc\n    })()\n  }\n  let [ files, urls ] = await handleDoc(doc, {\n    getImages: replaceImages.bind(null, doc)\n  })\n  await getExternal({\n    prefix: options.prefix,\n    oldFiles,\n    files,\n    urls,\n    got\n  })\n  return files\n}\n"],"names":["hash","buffer","crypto","createHash","update","digest","replaceImages","doc","selector","imgs","img","querySelectorAll","node","createTextNode","src","parentNode","replaceChild","push","getExternal","async","options","prefix","oldFiles","files","urls","offset","length","got","gotBase","promises","map","url","index","get","body","content","headers","encoding","fname","String","padStart","mime","extension","old","integrity","datas","Promise","all","info","handleDoc","title","integity","undefined","sourceURL","window","document","JSDOM","getImages","bind"],"mappings":"0PAwBA,MAAMA,KAAQC,WACMC,OAAOC,WAAW,UACjCC,OAAOH,EAAQ,QACfI,OAAO,WCDNC,cAAgB,CAACC,EAAKC,SACtBC,EAAO,OACN,MAAMC,KAAOH,EAAII,iBAAiBH,GAAW,KAC5CI,EAAOL,EAAIM,sBAAsBH,EAAII,QACzCJ,EAAIK,WAAWC,aAAaJ,EAAMF,GAClCD,EAAKQ,KAAKP,EAAII,YAETL,GAGHS,YAAcC,MAAOC,EAAU,YAC7BC,OAAEA,EAAFC,SAAUA,EAAVC,MAAoBA,EAApBC,KAA2BA,GAASJ,EACpCK,EAASF,EAAMG,OACfC,EAAMP,EAAQO,KAAOC,YACvBC,EAAWL,EAAKM,IAAIX,MAAOY,EAAKC,WAC5BC,EAAMd,cACJe,KAAMC,EAARC,QAAiBA,SAAkBT,EAAII,EAAK,CAAEM,SAAU,aAQrD,CAAEF,QAAAA,EAASG,SANhBjB,WAEAkB,OAAOP,EAAQ,GAAGQ,SAAS,EAAG,QAE9BC,KAAKC,UAAUN,EAAQ,kBAAoB,cAI3CO,EAAMrB,GAAYA,EAASU,EAAQP,MACnCkB,GAAOA,EAAIL,OAASK,EAAIC,WAAaD,EAAIC,YAAcb,QAClD,CACLO,MAAOK,EAAIL,MACXM,UAAWb,EACX9B,OAAQkB,gBACQc,KAAOE,aAIvBG,MAAEA,EAAFH,QAASA,SAAkBF,UACxB,CACLK,MAAAA,EACAM,UAAWb,EACX9B,OAAQkC,KAGRU,QAAcC,QAAQC,IAAIlB,OACzB,MAAMmB,KAAQH,EACjBtB,EAAMN,KAAK+B,IAIf,kBAAsB5B,EAAS6B,WACvBtB,EAAMP,EAAQO,KAAOC,QACrBN,EAAWF,EAAQG,SAErBH,EAAQnB,SAAWmB,EAAQb,UACtB,CACL,CACE+B,SAAUlB,EAAQC,UAAUD,EAAQ8B,YACpCC,cAAUC,EACVnD,OAAQmB,EAAQnB,aAIlBM,EAAMa,EAAQb,QACbA,EAAK,KACHa,EAAQiC,iBAGb9C,OAAY,eACJ+C,QAAUC,SAAUhD,IAC1B,IAAIiD,mBAAa7B,EAAIP,EAAQiC,YAAYnB,KAAM,CAAEH,IAAKX,EAAQiC,mBACvD9C,GAHG,OAMRgB,EAAOC,SAAeyB,EAAU1C,EAAK,CACzCkD,UAAWnD,cAAcoD,KAAK,KAAMnD,kBAEhCW,YAAY,CAChBG,OAAQD,EAAQC,OAChBC,SAAAA,EACAC,MAAAA,EACAC,KAAAA,EACAG,IAAAA,IAEKJ"}