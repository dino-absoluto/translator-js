{"version":3,"file":"app.min.js","sources":["../src/get/base/base.mjs","../src/get/base/chapter.mjs","../src/get/base/volume.mjs","../src/get/base/series.mjs","../src/get/engine-syosetu.mjs","../src/get/index.mjs","../src/config.js","../src/index.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\n/* -imports */\n\nexport default class Base {\n  constructor (props = {}) {\n    props = Object.assign({}, props)\n    Object.defineProperties(this, {\n      props: { writable: true, value: props }\n    })\n  }\n\n  async setProps (patch, defer = false) {\n    if (typeof patch !== 'object') {\n      return\n    }\n    const last = this.props\n    if (await this.shouldUpdate(last, patch)) {\n      const update = async () => {\n        await this.willUpdate(last, patch)\n        this.props = Object.assign({}, this.props, patch)\n        await this.update()\n        await this.didUpdate()\n      }\n      if (defer) {\n        return update\n      } else {\n        await update()\n      }\n    } else {\n      this.props = Object.assign({}, last, patch)\n    }\n  }\n\n  shouldUpdate (last, patch) {\n    return false\n  }\n\n  willUpdate (last, patch) {\n  }\n\n  update () {\n  }\n\n  didUpdate () {\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport Base from './base'\nimport path from 'path'\nimport fs from 'fs'\nimport filenamify from 'filenamify'\nimport makeDir from 'make-dir'\nimport chalk from 'chalk'\n/* -imports */\n\nexport class FileInfo {\n  constructor (options) {\n    const { chapter } = options\n    Object.defineProperties(this, {\n      chapter: { value: chapter },\n      integrity: { enumerable: true, value: options.integrity },\n      fname: { enumerable: true, value: options.fname },\n      buffer: { writable: true, value: options.buffer }\n    })\n  }\n\n  get relative () {\n    return path.join(this.chapter.dirRelative, this.fname)\n  }\n\n  get absolute () {\n    return path.join(this.chapter.dirAbsolute, this.fname)\n  }\n\n  exists () {\n    try {\n      fs.accessSync(this.absolute)\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  async write (force = false) {\n    if (!this.buffer) {\n      return\n    }\n    if (typeof this.buffer === 'function') {\n      this.buffer = await this.buffer()\n    }\n    fs.writeFileSync(this.absolute, await this.buffer, {\n      flag: force ? 'w' : 'wx'\n    })\n  }\n\n  remove (force = false) {\n    const { relative } = this\n    if (relative.length > 0 && typeof relative === 'string') {\n      fs.unlinkSync(this.absolute)\n    }\n  }\n}\n\nexport default class Chapter extends Base {\n  constructor (props) {\n    super(props)\n    this.props.files = props.files && props.files.map((data, index) => {\n      return new FileInfo(Object.assign({}, data, {\n        chapter: this\n      }))\n    })\n    Object.defineProperties(this, {\n      index: { get: () => this.props.index },\n      title: { enumerable: true, get: () => this.props.title },\n      files: { enumerable: true, get: () => this.props.files },\n      integrity: { enumerable: true, get: () => this.props.integrity },\n      volume: {\n        enumerable: true,\n        get: () => {\n          let vol = this.props.volume && this.props.volume.index\n          if (Number.isInteger(vol)) {\n            return vol\n          }\n        }\n      }\n    })\n  }\n\n  getName (fname) {\n    return filenamify(`${this.prefix} ${fname}`)\n  }\n\n  get prefix () {\n    return `${\n      this.props.index.toString().padStart(3, '0')\n    }`\n  }\n\n  get dirRelative () {\n    const { volume } = this.props\n    if (volume) {\n      return volume.relative\n    }\n    return ''\n  }\n\n  get dirAbsolute () {\n    const { volume } = this.props\n    if (volume) {\n      return volume.absolute\n    }\n    if (this.props.base) {\n      return this.props.base\n    }\n    return process.cwd()\n  }\n\n  async shouldUpdate (last, patch) {\n    {\n      /* ignore files */\n      let names = Object.getOwnPropertyNames(patch)\n      if (names.length === 1 && names[0] === 'files') {\n        return false\n      }\n    }\n    if (patch.integrity && patch.integrity !== last.integrity) {\n      return true\n    }\n    if (patch.index && patch.index !== last.index) {\n      return true\n    }\n    if (last.files) {\n      for (const info of last.files) {\n        if (!await info.exists()) {\n          return true\n        }\n      }\n      if (patch.files) {\n        for (const [info, index] of last.files.entries()) {\n          const pInfo = patch.files[index]\n          if (info.integrity !== pInfo.integrity) {\n            return true\n          }\n          if (info.fname !== pInfo.fname) {\n            return true\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  async willUpdate (last, patch) {\n    super.willUpdate(...arguments)\n    const files = this.props.files\n    makeDir.sync(this.dirAbsolute)\n    if (!files) {\n      return\n    }\n    await Promise.all(files.map(info => {\n      try {\n        info.remove()\n      } catch (err) {\n      }\n    }))\n  }\n\n  update () {\n    const { props } = this\n    const files = [\n      new FileInfo({\n        chapter: this,\n        fname: this.getName(`${props.title}.txt`),\n        integrity: undefined\n      })\n    ]\n    props.files = files\n  }\n\n  async didUpdate () {\n    const { props } = this\n    const { files } = props\n    if (!files) {\n      return\n    }\n    makeDir.sync(this.dirAbsolute)\n    let promises = Promise.all(files.map(info => {\n      if (info.buffer) {\n        return info.write(props.overwrite)\n      }\n    }))\n    return promises\n  }\n\n  printInfo () {\n    const { props } = this\n    const { files } = props\n    console.log(chalk`  {gray ${this.prefix}} ${props.title}{green ${\n      files.length > 1 ? (' +' + (files.length - 1)) : ''\n    }}`)\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport Base from './base'\nimport path from 'path'\nimport filenamify from 'filenamify'\n/* -imports */\n\nexport default class Volume extends Base {\n  constructor (props) {\n    super(props)\n    Object.defineProperties(this, {\n      index: { get: () => this.props.index },\n      title: { enumerable: true, get: () => this.props.title }\n    })\n  }\n\n  get base () {\n    const { props } = this\n    if (props.base) {\n      return path.resolve(props.base)\n    } else {\n      return process.cwd()\n    }\n  }\n\n  get filename () {\n    const { props } = this\n    const name = filenamify(`${\n      props.index.toString().padStart(2, '0')\n    } ${props.title}`)\n    return name\n  }\n\n  get relative () {\n    return this.filename\n  }\n\n  get absolute () {\n    return path.resolve(this.base, this.relative)\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport BaseChapter from './chapter'\nimport BaseVolume from './volume'\nimport Base from './base'\nimport path from 'path'\nimport fs from 'fs'\nimport makeDir from 'make-dir'\nimport filenamify from 'filenamify'\nimport chalk from 'chalk'\nimport readline from 'readline'\nimport util from 'util'\n/* -imports */\n\nconst clearLine = () => {\n  readline.clearLine(process.stdout, 0)\n  readline.cursorTo(process.stdout, 0)\n}\n\nconst print = (...argv) => {\n  process.stdout.write(util.format(...argv))\n}\n\nconst log = (...argv) => console.log(...argv)\n\nexport default class Series extends Base {\n  constructor (props, parsed = false) {\n    const meta = parsed ? props : Series.parseMeta(props)\n    super(meta)\n    props = this.props\n    if (props.volumes) {\n      const { Volume } = this\n      props.volumes = props.volumes.map((vol, index) => {\n        return new Volume(Object.assign({}, vol, {\n          index,\n          base: this.targetDir\n        }))\n      })\n    } else {\n      props.volumes = []\n    }\n    if (props.chapters) {\n      const { Chapter } = this\n      props.chapters = props.chapters.map((ch, index) => {\n        let vol = (Number.isInteger(ch.volume) && props.volumes[ch.volume])\n        return new Chapter(Object.assign({}, ch, {\n          index,\n          volume: vol\n        }))\n      })\n    } else {\n      props.chapters = []\n    }\n    Object.defineProperties(this, {\n      sourceURL: { enumerable: true, get: () => this.props.sourceURL },\n      volumes: { enumerable: true,\n        get: () =>\n          (this.props.volumes.length && this.props.volumes) || undefined },\n      chapters: { enumerable: true,\n        get: () =>\n          (this.props.chapters.length && this.props.chapters) || undefined }\n    })\n  }\n\n  get Chapter () {\n    return BaseChapter\n  }\n\n  get Volume () {\n    return BaseVolume\n  }\n\n  get targetDir () {\n    return path.resolve(this.props.targetDir)\n  }\n\n  shouldLog (level) {\n    return this.props.verbose && this.props.verbose >= level\n  }\n\n  static parseMeta (props) {\n    let accepted = {\n      verbose: props.verbose && (parseInt(props.verbose) || 1),\n      overwrite: props.overwrite\n    }\n    try {\n      let url = new URL(props.source)\n      let name = props.name || filenamify(`${url.host}${url.pathname}`)\n      let targetDir = path.resolve(props.chdir || '', name)\n      let data = {}\n      try {\n        let fname = path.join(targetDir, 'index.json')\n        let fdata = JSON.parse(fs.readFileSync(fname, 'utf8'))\n        Object.assign(data, fdata)\n      } catch (err) {\n      }\n      return Object.assign(data, {\n        sourceURL: url,\n        targetDir\n      }, accepted)\n    } catch (err) {\n      try {\n        let fname = path.resolve(path.join(props.source, 'index.json'))\n        let data = JSON.parse(fs.readFileSync(fname, 'utf8'))\n        let targetDir = path.dirname(fname)\n        data.sourceURL = new URL(data.sourceURL)\n        return Object.assign(data, {\n          targetDir\n        }, accepted)\n      } catch (error) {\n        throw new Error('Failed to read index.json')\n      }\n    }\n  }\n\n  shouldUpdate () {\n    return true\n  }\n\n  async willUpdate (last, patch) {\n    const { props, Volume, Chapter } = this\n    const { volumes, chapters } = patch\n    if (volumes) {\n      patch.volumes = await Promise.all(volumes.map(async (data, index) => {\n        let config = (props.volumes[index] && props.volumes[index].props) || {}\n        let vol = new Volume(Object.assign(config, {\n          index,\n          base: this.targetDir\n        }))\n        await vol.setProps(Object.assign({}, data, {\n          index\n        }))\n        return vol\n      }))\n    }\n    if (chapters) {\n      const defers = []\n      patch.chapters = await Promise.all(chapters.map(async (data, index) => {\n        let volume = Number.isInteger(data.volume) && patch.volumes[data.volume]\n        let config = (props.chapters[index] && props.chapters[index].props) || {}\n        let ch = new Chapter(Object.assign(config, {\n          index,\n          base: this.targetDir,\n          overwrite: props.overwrite\n        }))\n        if (!volume) {\n          // Vol matching failed\n        }\n        let defer = await ch.setProps(Object.assign({}, data, {\n          index,\n          volume,\n          base: this.targetDir\n        }), true)\n        if (defer) {\n          defers.push([ch, defer])\n        }\n        return ch\n      }))\n      /* defer tasks */\n      patch.defers = defers\n      patch.delta = chapters.length -\n        ((props.chapters && props.chapters.length) || 0)\n    }\n    return super.willUpdate(last, patch)\n  }\n\n  async saveIndex () {\n    const fpath = path.join(this.props.targetDir, 'index.json')\n    fs.writeFileSync(fpath, JSON.stringify(this, null, 1), 'utf8')\n  }\n\n  async update () {\n    const { props } = this\n    const fpath = path.join(props.targetDir, 'index.json')\n    await makeDir(props.targetDir)\n    fs.writeFileSync(fpath, JSON.stringify(this, null, 1), 'utf8')\n    if (props.defers && props.defers.length) {\n      const shouldLog = this.shouldLog(1)\n      const length = props.defers.length\n      const shrink = props.defers.length > 16\n      if (shouldLog) {\n        print(chalk`  {green [${\n          props.chapters.length}]} {green ->} `)\n        if (props.delta) {\n          print(chalk`{green New ${\n            props.delta}}{gray ,} `)\n        }\n        log(chalk`{red Updated ${props.defers.length}}`)\n      }\n      if (shrink) {\n        for (const [index, [, defer]] of props.defers.entries()) {\n          await defer()\n          await this.saveIndex()\n          if (shouldLog) {\n            clearLine()\n            print(chalk`  {green ->} {gray [${index + 1}/${length}]}`)\n          }\n        }\n        if (shouldLog) {\n          clearLine()\n          log(chalk`  {gray [${length}/${length}]}`)\n        }\n      } else {\n        for (const [index, [ch, defer]] of props.defers.entries()) {\n          void index\n          await defer()\n          if (shouldLog) {\n            await ch.printInfo()\n          }\n          await this.saveIndex()\n        }\n      }\n      this.saveIndex()\n      if (shouldLog) {\n        log(chalk`  {green Completed}`)\n      }\n      delete props.defers\n      delete props.delta\n    }\n  }\n\n  async refresh () {\n    if (this.shouldLog(1)) {\n      const maxWidth = process.stdout.columns\n      let output = path.relative('.', this.targetDir)\n      let width = 2 + 4 + String(this.sourceURL).length + output.length\n      print(chalk`{gray #} {blue ${this.sourceURL}}`)\n      if (width > maxWidth) {\n        log()\n      } else {\n        print(' ')\n      }\n      log(chalk`{green ->} ${output}`)\n    }\n    return this.fetch()\n  }\n\n  async fetch () {\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport cookie from 'cookie'\nimport mime from 'mime-types'\nimport { JSDOM } from 'jsdom'\nimport crypto from 'crypto'\nimport * as base from './base'\n/* -imports */\n\nconst got = (url, config = {}) => {\n  config.headers = Object.assign({}, config.headers)\n  if (/^novel18./.test(url.hostname)) {\n    config.headers.cookie = cookie.serialize('over18', 'yes')\n  }\n  return gotBase(url, config)\n}\n\nconst hash = (buffer) => {\n  const integrity = crypto.createHash('sha256')\n    .update(buffer, 'utf8')\n    .digest('base64')\n  return integrity\n}\n\nexport class Chapter extends base.Chapter {\n  async update () {\n    const { props } = this\n    delete props.files\n    /* prioritize props.doc */\n    if (props.buffer && !props.doc) {\n      props.files = [\n        new base.FileInfo({\n          chapter: this,\n          fname: this.getName(`${props.title}.txt`),\n          integity: undefined,\n          buffer: props.buffer\n        })\n      ]\n      return\n    }\n    let doc = props.doc\n    if (!doc) {\n      if (!props.sourceURL) {\n        return\n      }\n      doc = await (async () => {\n        let { window: { document: doc } } =\n        new JSDOM((await got(props.sourceURL)).body, { url: props.sourceURL })\n        return doc\n      })()\n    }\n    let files = []\n    let imgs = []\n    for (const img of doc.querySelectorAll('#novel_color img')) {\n      let node = doc.createTextNode(`![](${img.src})`)\n      img.parentNode.replaceChild(node, img)\n      imgs.push(img.src)\n    }\n    {\n      const buffer = await props.buffer\n      let text = buffer ? (\n        typeof buffer === 'function' ? await buffer() : buffer.toString()\n      ) : ''\n      const selectors = [\n        '.novel_subtitle',\n        '#novel_p',\n        '#novel_honbun',\n        '#novel_a'\n      ]\n      for (const sel of selectors) {\n        for (const node of doc.querySelectorAll(sel)) {\n          text += node.textContent + '\\n\\n-----\\n\\n'\n        }\n      }\n      files.push(new base.FileInfo({\n        chapter: this,\n        fname: this.getName(`${props.title}.txt`),\n        integity: undefined,\n        buffer: text\n      }))\n    } /* -text */\n    {\n      let promises = imgs.map(async (url, index) => {\n        let { body: content, headers } = await got(url, { encoding: null })\n        let fname = `${\n          this.prefix\n        } image ${\n          String(index + 1).padStart(2, '0')\n        }.${\n          mime.extension(headers['content-type']) || 'jpg'\n        }`\n        return {\n          chapter: this,\n          fname,\n          integrity: url,\n          buffer: content\n        }\n      })\n      imgs = await Promise.all(promises)\n      for (const info of imgs) {\n        files.push(new base.FileInfo(info))\n      }\n    } /* -images */\n    props.files = files\n  }\n}\n\nexport class Volume extends base.Volume {\n}\n\nexport class Series extends base.Series {\n  constructor (props, ...argv) {\n    super(props, ...argv)\n    if (!Series.test(this.sourceURL)) {\n      throw new Error('Invalid URL')\n    }\n  }\n  static test (url) {\n    return /^((http|https):\\/\\/|)(ncode|novel18).syosetu.com\\/[^/]+\\/?$/.test(url)\n  }\n  get Chapter () { return Chapter }\n  get Volume () { return Volume }\n\n  async fetch () {\n    const url = this.sourceURL\n    let { window: { document: doc } } = new JSDOM((await got(url)).body, { url: url })\n    let volumes = []\n    let chapters = []\n    let description = ''\n    {\n      const title = doc.querySelector('.novel_title')\n        .textContent.trim()\n      const author = doc.querySelector('.novel_writername')\n        .textContent.trim().substr('作者：'.length)\n      description = `# ${title}\\nAuthor: ${author}\\n\\n`\n      let singular = false\n      {\n        let dnode = doc.querySelector('#novel_ex')\n        if (dnode != null) {\n          description += dnode.textContent\n        } else {\n          singular = true\n        }\n        description += '\\n\\n-----\\n\\n'\n      }\n      chapters.push({\n        title: 'Description',\n        integrity: Date.now(),\n        buffer: () => description,\n        doc: singular ? doc : undefined\n      })\n    } /* -description */\n    let volumeIndex = -1\n    let indexBox = doc.querySelector('.index_box')\n    if (indexBox == null) {\n      return this.setProps({\n        chapters\n      })\n    }\n    let chaptersAsync = []\n    for (const node of indexBox.children) {\n      if (node.classList.contains('chapter_title')) {\n        let title = node.textContent.trim()\n        volumes.push({\n          title\n        })\n        description += `\\n## ${title}\\n`\n        ++volumeIndex\n      } else if (node.classList.contains('novel_sublist2')) {\n        let volIndex = Number(volumeIndex)\n        chaptersAsync.push((async () => {\n          let { textContent: title, href: link } = (() => {\n            let anode = node.firstElementChild.firstElementChild\n            if (anode.nodeName.toLowerCase() !== 'a') {\n              anode = node.querySelector('a')\n            }\n            return anode\n          })()\n          title = title.trim()\n          description += `${\n            String(chaptersAsync.length + 1).padStart(3, '0')\n          } ${title}\\n`\n          if (link.startsWith('//')) {\n            link = url.protocol + link\n          } else if (link.startsWith('/')) {\n            link = new URL(link, url.origin)\n          }\n          return {\n            volume: volIndex,\n            sourceURL: link,\n            title,\n            integrity: (() => {\n              let date = (() => {\n                let date = node.lastElementChild\n                if (date.classList.contains('long_update')) {\n                  return date\n                } else {\n                  return node.querySelector('.long_update')\n                }\n              })()\n              let span = date.lastElementChild\n              if (span) {\n                return span.title.trim()\n              } else {\n                return date.innerHTML.trim()\n              }\n            })()\n          }\n        })())\n      } else {\n        /* unexpected node */\n      }\n    }\n    chapters[0].integrity = hash(description)\n    chapters = chapters.concat(await Promise.all(chaptersAsync))\n    await this.setProps({\n      volumes,\n      chapters\n    })\n  }\n}\n\nexport default Series\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Series } from './base'\nimport Syosetu from './engine-syosetu'\n/* -imports */\n\nconst engines = [\n  Syosetu\n]\n\nexport default (options) => {\n  const meta = Series.parseMeta(options)\n  const engine = (() => {\n    for (const Engine of engines) {\n      if (Engine.test(meta.sourceURL)) {\n        return new Engine(meta, true)\n      }\n    }\n  })()\n  if (!engine) {\n    throw new Error('Failed to find a matching engine')\n  }\n  return engine\n}\n","/**\n * @file index.js\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* config */\nconst config = {\n  version: require('../package.json').version,\n  sourceDir: __dirname\n}\n\nmodule.exports = config\n","/**\n * @file index.mjs\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport getEngine from './get'\nimport chalk from 'chalk'\nimport info from './config.js'\nimport yargs from 'yargs'\nimport globby from 'globby'\nimport path from 'path'\n/* -imports */\n\nconst report = (error) => {\n  console.error(chalk`{red ${report.stack ? error.stack : error}}`)\n  if (report.pedantic) {\n    process.exit(-1)\n  }\n}\nreport.pedantic = true\n\nconst _postParse = (config) => {\n  report.stack = !!config.stack\n  report.pedantic = !!config.pedantic\n}\n\nconst _glob = async (config) => {\n  if (config.sources && config.sources.length) {\n    return\n  }\n  let indexes = await globby(path.join(config.output, '**/index.json'))\n  config.sources = indexes.map(fpath => path.dirname(fpath))\n}\n\nconst _get = async (config) => {\n  let output = config.output || './download/'\n  for (const source of config.sources) {\n    try {\n      let engine = getEngine({\n        source,\n        verbose: true,\n        chdir: output,\n        overwrite: config.force\n      })\n      await engine.refresh()\n    } catch (error) {\n      report(error)\n    }\n  }\n}\n\nconst cmdGet = async (config) => {\n  await _postParse(config)\n  await _glob(config)\n  await _get(config)\n}\n\nconst _parseArgs = async () => {\n  return yargs.strict(true)\n    .usage('$0 get [--output=<path>] [options] [<URL> | <path>..]')\n    .help('help').alias('help', 'h')\n    .version(info.version)\n    .group([ 'help', 'version' ], 'Info:')\n    .option('stack', {\n      hidden: true,\n      default: false,\n      type: 'boolean'\n    })\n    .option('output', {\n      alias: ['o'],\n      default: 'download',\n      type: 'string',\n      desc: 'Output directory'\n    })\n    .option('force', {\n      alias: ['f'],\n      default: false,\n      type: 'boolean',\n      desc: 'Overwrite untracked files'\n    })\n    .option('pedantic', {\n      default: true,\n      type: 'boolean',\n      desc: 'Exit on first error'\n    })\n    .command(\n      'get [<sources>..]',\n      'Get RAWs',\n      yargs => yargs.strict()\n        .usage('$0 get [--output=<path>] [options] [<URL> | <path>..]')\n        .argv,\n      cmdGet\n    )\n    .demandCommand(1)\n    .fail(err => {\n      yargs.showHelp()\n      report(err)\n    })\n    .argv\n}\n\n/**\n * Main function\n */\nconst _main = async () => {\n  await _parseArgs()\n}\n\n_main().catch(report)\n"],"names":["Base","constructor","props","Object","assign","defineProperties","this","writable","value","patch","defer","last","shouldUpdate","update","async","willUpdate","didUpdate","FileInfo","options","chapter","integrity","enumerable","fname","buffer","path","join","dirRelative","dirAbsolute","exists","fs","accessSync","absolute","error","force","writeFileSync","flag","remove","relative","length","unlinkSync","Chapter","files","map","data","index","get","title","volume","vol","Number","isInteger","getName","filenamify","prefix","toString","padStart","base","process","cwd","names","getOwnPropertyNames","info","entries","pInfo","arguments","makeDir","sync","Promise","all","err","undefined","write","overwrite","printInfo","console","log","chalk","Volume","resolve","filename","clearLine","readline","stdout","cursorTo","print","argv","util","format","Series","parsed","parseMeta","volumes","targetDir","chapters","ch","sourceURL","BaseChapter","BaseVolume","shouldLog","level","verbose","accepted","parseInt","url","URL","source","name","host","pathname","chdir","fdata","JSON","parse","readFileSync","dirname","Error","config","setProps","defers","push","delta","super","fpath","stringify","shrink","saveIndex","maxWidth","columns","output","width","String","fetch","got","headers","test","hostname","cookie","serialize","gotBase","hash","crypto","createHash","digest","doc","integity","window","document","JSDOM","body","imgs","img","querySelectorAll","node","createTextNode","src","parentNode","replaceChild","text","selectors","sel","textContent","promises","content","encoding","mime","extension","description","querySelector","trim","author","substr","singular","dnode","Date","now","volumeIndex","indexBox","chaptersAsync","children","classList","contains","volIndex","href","link","anode","firstElementChild","nodeName","toLowerCase","startsWith","protocol","origin","date","lastElementChild","span","innerHTML","concat","engines","Syosetu","meta","engine","Engine","version","require$$0","sourceDir","__dirname","report","stack","pedantic","exit","_postParse","_glob","sources","indexes","globby","_get","getEngine","refresh","cmdGet","_parseArgs","yargs","strict","usage","help","alias","group","option","hidden","default","type","desc","command","demandCommand","fail","showHelp","_main","catch"],"mappings":"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"}