{"version":3,"file":"app.min3.js","sources":["../src/get/engine-syosetu.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport cookie from 'cookie'\nimport { JSDOM } from 'jsdom'\nimport * as base from './base'\nimport hash from './utils/hash'\nimport getExternal from './utils/get-external'\n/* -imports */\n\nconst got = (url, config = {}) => {\n  config.headers = Object.assign({}, config.headers)\n  if (/^novel18./.test(url.hostname)) {\n    config.headers.cookie = cookie.serialize('over18', 'yes')\n  }\n  return gotBase(url, config)\n}\n\nexport class Chapter extends base.Chapter {\n  async update () {\n    const { props } = this\n    const oldFiles = props.files\n    delete props.files\n    /* prioritize props.doc */\n    if (props.buffer && !props.doc) {\n      props.files = [\n        {\n          fname: this.getName(`${props.title}.txt`),\n          integity: undefined,\n          buffer: props.buffer\n        }\n      ]\n      return\n    }\n    let doc = props.doc\n    if (!doc) {\n      if (!props.sourceURL) {\n        return\n      }\n      doc = await (async () => {\n        let { window: { document: doc } } =\n        new JSDOM((await got(props.sourceURL)).body, { url: props.sourceURL })\n        return doc\n      })()\n    }\n    let files = []\n    let imgs = []\n    for (const img of doc.querySelectorAll('#novel_color img')) {\n      let node = doc.createTextNode(`![](${img.src})`)\n      img.parentNode.replaceChild(node, img)\n      imgs.push(img.src)\n    }\n    {\n      const buffer = await props.buffer\n      let text = buffer ? (\n        typeof buffer === 'function' ? await buffer() : buffer.toString()\n      ) : ''\n      const selectors = [\n        '.novel_subtitle',\n        '#novel_p',\n        '#novel_honbun',\n        '#novel_a'\n      ]\n      for (const sel of selectors) {\n        for (const node of doc.querySelectorAll(sel)) {\n          text += node.textContent + '\\n\\n-----\\n\\n'\n        }\n      }\n      files.push({\n        fname: this.getName(`${props.title}.txt`),\n        integity: undefined,\n        buffer: text\n      })\n    } /* -text */\n    await getExternal({\n      prefix: this.prefix,\n      oldFiles,\n      files,\n      urls: imgs\n    })\n    props.files = files\n  }\n}\n\nexport class Volume extends base.Volume {\n}\n\nexport class Series extends base.Series {\n  constructor (props, ...argv) {\n    super(props, ...argv)\n    if (!Series.test(this.sourceURL)) {\n      throw new Error('Invalid URL')\n    }\n  }\n  static test (url) {\n    return /^((http|https):\\/\\/|)(ncode|novel18).syosetu.com\\/[^/]+\\/?$/.test(url)\n  }\n  get Chapter () { return Chapter }\n  get Volume () { return Volume }\n\n  async fetch () {\n    const url = this.sourceURL\n    let { window: { document: doc } } = new JSDOM((await got(url)).body, { url: url })\n    let volumes = []\n    let chapters = []\n    let description = ''\n    {\n      const title = doc.querySelector('.novel_title')\n        .textContent.trim()\n      const author = doc.querySelector('.novel_writername')\n        .textContent.trim().substr('作者：'.length)\n      description = `# ${title}\\nAuthor: ${author}\\n\\n`\n      let singular = false\n      {\n        let dnode = doc.querySelector('#novel_ex')\n        if (dnode != null) {\n          description += dnode.textContent\n        } else {\n          singular = true\n        }\n        description += '\\n\\n-----\\n\\n'\n      }\n      chapters.push({\n        title: 'Description',\n        integrity: Date.now(),\n        buffer: () => description,\n        doc: singular ? doc : undefined\n      })\n    } /* -description */\n    let volumeIndex = -1\n    let indexBox = doc.querySelector('.index_box')\n    if (indexBox == null) {\n      return this.setProps({\n        chapters\n      })\n    }\n    let chaptersAsync = []\n    for (const node of indexBox.children) {\n      if (node.classList.contains('chapter_title')) {\n        let title = node.textContent.trim()\n        volumes.push({\n          title\n        })\n        description += `\\n## ${title}\\n`\n        ++volumeIndex\n      } else if (node.classList.contains('novel_sublist2')) {\n        let volIndex = Number(volumeIndex)\n        chaptersAsync.push((async () => {\n          let { textContent: title, href: link } = (() => {\n            let anode = node.firstElementChild.firstElementChild\n            if (anode.nodeName.toLowerCase() !== 'a') {\n              anode = node.querySelector('a')\n            }\n            return anode\n          })()\n          title = title.trim()\n          description += `${\n            String(chaptersAsync.length + 1).padStart(3, '0')\n          } ${title}\\n`\n          if (link.startsWith('//')) {\n            link = url.protocol + link\n          } else if (link.startsWith('/')) {\n            link = new URL(link, url.origin)\n          }\n          return {\n            volume: volIndex,\n            sourceURL: link,\n            title,\n            integrity: (() => {\n              let date = (() => {\n                let date = node.lastElementChild\n                if (date.classList.contains('long_update')) {\n                  return date\n                } else {\n                  return node.querySelector('.long_update')\n                }\n              })()\n              let span = date.lastElementChild\n              if (span) {\n                return span.title.trim()\n              } else {\n                return date.innerHTML.trim()\n              }\n            })()\n          }\n        })())\n      } else {\n        /* unexpected node */\n      }\n    }\n    chapters[0].integrity = hash(description)\n    chapters = chapters.concat(await Promise.all(chaptersAsync))\n    return this.patch({\n      volumes,\n      chapters\n    })\n  }\n}\n\nexport default Series\n"],"names":["got","url","config","headers","Object","assign","test","hostname","cookie","serialize","gotBase","Chapter","base","props","this","oldFiles","files","buffer","doc","fname","getName","title","integity","undefined","sourceURL","window","document","JSDOM","body","imgs","img","querySelectorAll","node","createTextNode","src","parentNode","replaceChild","push","text","toString","selectors","sel","textContent","getExternal","prefix","urls","Volume","Series","constructor","argv","Error","volumes","chapters","description","querySelector","trim","author","substr","length","singular","dnode","integrity","Date","now","volumeIndex","indexBox","setProps","chaptersAsync","children","classList","contains","volIndex","Number","href","link","anode","firstElementChild","nodeName","toLowerCase","String","padStart","startsWith","protocol","URL","origin","volume","date","lastElementChild","span","innerHTML","hash","concat","Promise","all","patch"],"mappings":"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"}