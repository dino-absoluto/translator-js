{"version":3,"file":"app.min3.js","sources":["../src/get/engine-syosetu.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport cookie from 'cookie'\nimport { JSDOM } from 'jsdom'\nimport * as base from './base'\nimport hash from './utils/hash'\nimport toFiles from './utils/to-files'\n/* -imports */\n\nconst got = (url, config = {}) => {\n  url = new URL(url)\n  config.headers = Object.assign({}, config.headers)\n  if (/^novel18./.test(url.hostname)) {\n    config.headers.cookie = cookie.serialize('over18', 'yes')\n  }\n  return gotBase(url, config)\n}\n\nexport class Chapter extends base.Chapter {\n  async updateFiles () {\n    const { props } = this\n    const options = Object.assign({}, props, {\n      prefix: this.prefix,\n      got\n    })\n    return toFiles(options, async (doc, utils) => {\n      let files = []\n      let imgs = await utils.getImages('#novel_color img')\n      {\n        const buffer = await props.buffer\n        let text = buffer ? (\n          typeof buffer === 'function' ? await buffer() : buffer.toString()\n        ) : ''\n        const selectors = [\n          '.novel_subtitle',\n          '#novel_p',\n          '#novel_honbun',\n          '#novel_a'\n        ]\n        for (const sel of selectors) {\n          for (const node of doc.querySelectorAll(sel)) {\n            text += node.textContent + '\\n\\n-----\\n\\n'\n          }\n        }\n        files.push({\n          fname: this.getName(`${props.title}.txt`),\n          integity: undefined,\n          buffer: text\n        })\n      } /* -text */\n      return [ files, imgs ]\n    })\n  }\n}\n\nexport class Volume extends base.Volume {\n}\n\nexport class Series extends base.Series {\n  constructor (props, ...argv) {\n    super(props, ...argv)\n    if (!Series.test(this.sourceURL)) {\n      throw new Error('Invalid URL')\n    }\n  }\n  static test (url) {\n    return /^((http|https):\\/\\/|)(ncode|novel18).syosetu.com\\/[^/]+\\/?$/.test(url)\n  }\n  get Chapter () { return Chapter }\n  get Volume () { return Volume }\n\n  async fetch () {\n    const url = this.sourceURL\n    let { window: { document: doc } } = new JSDOM((await got(url)).body, { url: url })\n    let volumes = []\n    let chapters = []\n    let description = ''\n    {\n      const title = doc.querySelector('.novel_title')\n        .textContent.trim()\n      const author = doc.querySelector('.novel_writername')\n        .textContent.trim().substr('作者：'.length)\n      description = `# ${title}\\nAuthor: ${author}\\n\\n`\n      let singular = false\n      {\n        let dnode = doc.querySelector('#novel_ex')\n        if (dnode != null) {\n          description += dnode.textContent\n        } else {\n          singular = true\n        }\n        description += '\\n\\n-----\\n\\n'\n      }\n      chapters.push({\n        title: 'Description',\n        integrity: Date.now(),\n        buffer: () => description,\n        doc: singular ? doc : undefined\n      })\n    } /* -description */\n    let volumeIndex = -1\n    let indexBox = doc.querySelector('.index_box')\n    if (indexBox == null) {\n      return this.setProps({\n        chapters\n      })\n    }\n    let chaptersAsync = []\n    for (const node of indexBox.children) {\n      if (node.classList.contains('chapter_title')) {\n        let title = node.textContent.trim()\n        volumes.push({\n          title\n        })\n        description += `\\n## ${title}\\n`\n        ++volumeIndex\n      } else if (node.classList.contains('novel_sublist2')) {\n        let volIndex = Number(volumeIndex)\n        chaptersAsync.push((async () => {\n          let { textContent: title, href: link } = (() => {\n            let anode = node.firstElementChild.firstElementChild\n            if (anode.nodeName.toLowerCase() !== 'a') {\n              anode = node.querySelector('a')\n            }\n            return anode\n          })()\n          title = title.trim()\n          description += `${\n            String(chaptersAsync.length + 1).padStart(3, '0')\n          } ${title}\\n`\n          if (link.startsWith('//')) {\n            link = url.protocol + link\n          } else if (link.startsWith('/')) {\n            link = new URL(link, url.origin)\n          }\n          return {\n            volume: volIndex,\n            sourceURL: link,\n            title,\n            integrity: (() => {\n              let date = (() => {\n                let date = node.lastElementChild\n                if (date.classList.contains('long_update')) {\n                  return date\n                } else {\n                  return node.querySelector('.long_update')\n                }\n              })()\n              let span = date.lastElementChild\n              if (span) {\n                return span.title.trim()\n              } else {\n                return date.innerHTML.trim()\n              }\n            })()\n          }\n        })())\n      } else {\n        /* unexpected node */\n      }\n    }\n    chapters[0].integrity = hash(description)\n    chapters = chapters.concat(await Promise.all(chaptersAsync))\n    return this.patch({\n      volumes,\n      chapters\n    })\n  }\n}\n\nexport default Series\n"],"names":["got","url","config","URL","headers","Object","assign","test","hostname","cookie","serialize","gotBase","Chapter","base","props","this","options","prefix","toFiles","async","doc","utils","files","imgs","getImages","buffer","text","toString","selectors","sel","node","querySelectorAll","textContent","push","fname","getName","title","integity","undefined","Volume","Series","constructor","argv","sourceURL","Error","window","document","JSDOM","body","volumes","chapters","description","querySelector","trim","author","substr","length","singular","dnode","integrity","Date","now","volumeIndex","indexBox","setProps","chaptersAsync","children","classList","contains","volIndex","Number","href","link","anode","firstElementChild","nodeName","toLowerCase","String","padStart","startsWith","protocol","origin","volume","date","lastElementChild","span","innerHTML","hash","concat","Promise","all","patch"],"mappings":"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"}