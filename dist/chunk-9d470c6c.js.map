{"version":3,"file":"chunk-9d470c6c.js","sources":["../src/get/base/patch.mjs","../src/get/base/chapter.mjs","../src/get/base/volume.mjs","../src/get/base/series.mjs","../src/get/utils/hash.mjs","../src/get/utils/to-files.mjs","../src/get/engine-syosetu.mjs","../src/get/engine-kakuyomu.mjs","../src/get/index.mjs"],"sourcesContent":["/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\n/* -imports */\n\nexport default class Patch {\n  constructor (props = {}) {\n    props = Object.assign({}, props)\n    Object.defineProperties(this, {\n      props: { writable: true, value: props }\n    })\n  }\n\n  async patch (patch, run = true) {\n    if (typeof patch !== 'object') {\n      return\n    }\n    let last = this\n    let copy = new this.constructor(Object.assign({}, last.props, {\n      last, patch\n    }))\n    if (run) {\n      await copy.run()\n    }\n    return copy\n  }\n\n  async run () {\n    const { props } = this\n    const { last, patch } = props\n    delete props.last\n    delete props.patch\n    if (!patch) {\n      return\n    }\n    if (await this.shouldUpdate(last, patch)) {\n      await this.willUpdate(last, patch)\n      this.props = Object.assign({}, this.props, patch)\n      await this.update(last)\n      await this.didUpdate()\n    } else {\n      this.props = Object.assign({}, this.props, patch)\n    }\n  }\n\n  async isPending () {\n    const { props } = this\n    return !!(props.patch && await this.shouldUpdate(props.last, props.patch))\n  }\n\n  shouldUpdate (last, patch) {\n    return !!(patch && Object.getOwnPropertyNames(patch).length !== 0)\n  }\n\n  willUpdate (last, patch) {\n  }\n\n  update (last) {\n  }\n\n  didUpdate () {\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport Patch from './patch'\nimport path from 'path'\nimport fs from 'fs'\nimport filenamify from 'filenamify'\nimport makeDir from 'make-dir'\nimport chalk from 'chalk'\n/* -imports */\n\nexport class FileInfo {\n  constructor (options) {\n    const { chapter } = options\n    Object.defineProperties(this, {\n      chapter: { value: chapter },\n      integrity: { enumerable: true, value: options.integrity },\n      fname: { enumerable: true, value: options.fname },\n      buffer: { writable: true, value: options.buffer }\n    })\n  }\n\n  get relative () {\n    return path.join(this.chapter.dirRelative, this.fname)\n  }\n\n  get absolute () {\n    return path.join(this.chapter.dirAbsolute, this.fname)\n  }\n\n  exists () {\n    try {\n      fs.accessSync(this.absolute)\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  async write (force = false) {\n    if (!this.buffer) {\n      return\n    }\n    if (typeof this.buffer === 'function') {\n      this.buffer = await this.buffer()\n    }\n    fs.writeFileSync(this.absolute, await this.buffer, {\n      flag: force ? 'w' : 'wx'\n    })\n  }\n\n  remove (force = false) {\n    const { relative } = this\n    if (relative.length > 0 && typeof relative === 'string') {\n      fs.unlinkSync(this.absolute)\n    }\n  }\n}\n\nexport default class Chapter extends Patch {\n  constructor (props) {\n    super(props)\n    this.props.files = props.files && props.files.map((data, index) => {\n      return new FileInfo(Object.assign({}, data, {\n        chapter: this\n      }))\n    })\n    Object.defineProperties(this, {\n      index: { get: () => this.props.index },\n      title: { enumerable: true, get: () => this.props.title },\n      files: { enumerable: true, get: () => this.props.files },\n      integrity: { enumerable: true, get: () => this.props.integrity },\n      volume: {\n        enumerable: true,\n        get: () => {\n          let vol = this.props.volume && this.props.volume.index\n          if (Number.isInteger(vol)) {\n            return vol\n          }\n        }\n      }\n    })\n  }\n\n  getName (fname) {\n    return filenamify(`${this.prefix} ${fname}`)\n  }\n\n  get prefix () {\n    return `${\n      this.props.index.toString().padStart(3, '0')\n    }`\n  }\n\n  get dirRelative () {\n    const { volume } = this.props\n    if (volume) {\n      return volume.relative\n    }\n    return ''\n  }\n\n  get dirAbsolute () {\n    const { volume } = this.props\n    if (volume) {\n      return volume.absolute\n    }\n    if (this.props.base) {\n      return this.props.base\n    }\n    return process.cwd()\n  }\n\n  async shouldUpdate (last, patch) {\n    {\n      /* ignore files */\n      let names = Object.getOwnPropertyNames(patch)\n      if (names.length === 1 && names[0] === 'files') {\n        return false\n      }\n    }\n    if (patch.integrity && patch.integrity !== last.integrity) {\n      return true\n    }\n    if (patch.index && patch.index !== last.index) {\n      return true\n    }\n    if (last.files) {\n      for (const info of last.files) {\n        if (!await info.exists()) {\n          return true\n        }\n      }\n      if (patch.files) {\n        for (const [info, index] of last.files.entries()) {\n          const pInfo = patch.files[index]\n          if (info.integrity !== pInfo.integrity) {\n            return true\n          }\n          if (info.fname !== pInfo.fname) {\n            return true\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  async willUpdate (last, patch) {\n    super.willUpdate(...arguments)\n    const files = this.props.files\n    makeDir.sync(this.dirAbsolute)\n    if (!files) {\n      return\n    }\n    await Promise.all(files.map(info => {\n      try {\n        info.remove()\n      } catch (err) {\n      }\n    }))\n  }\n\n  updateFiles () {\n    const { props } = this\n    return [\n      {\n        fname: this.getName(`${props.title}.txt`),\n        integrity: undefined\n      }\n    ]\n  }\n\n  async update () {\n    const { props } = this\n    props.files = await this.updateFiles()\n  }\n\n  async didUpdate () {\n    const { props } = this\n    if (!props.files) {\n      return\n    }\n    props.files = props.files.map(info => new FileInfo(Object.assign({}, info, {\n      chapter: this\n    }, info)))\n    const { files } = props\n    makeDir.sync(this.dirAbsolute)\n    let promises = Promise.all(files.map(info => {\n      if (info.buffer) {\n        return info.write(props.overwrite)\n      }\n    }))\n    return promises\n  }\n\n  printInfo () {\n    const { props } = this\n    const { files } = props\n    console.log(chalk`  {gray ${this.prefix}} ${props.title}{green ${\n      files.length > 1 ? (' +' + (files.length - 1)) : ''\n    }}`)\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport Patch from './patch'\nimport path from 'path'\nimport filenamify from 'filenamify'\n/* -imports */\n\nexport default class Volume extends Patch {\n  constructor (props) {\n    super(props)\n    Object.defineProperties(this, {\n      index: { get: () => this.props.index },\n      title: { enumerable: true, get: () => this.props.title }\n    })\n  }\n\n  get base () {\n    const { props } = this\n    if (props.base) {\n      return path.resolve(props.base)\n    } else {\n      return process.cwd()\n    }\n  }\n\n  get filename () {\n    const { props } = this\n    const name = filenamify(`${\n      props.index.toString().padStart(2, '0')\n    } ${props.title}`)\n    return name\n  }\n\n  get relative () {\n    return this.filename\n  }\n\n  get absolute () {\n    return path.resolve(this.base, this.relative)\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport BaseChapter from './chapter'\nimport BaseVolume from './volume'\nimport Patch from './patch'\nimport path from 'path'\nimport fs from 'fs'\nimport makeDir from 'make-dir'\nimport filenamify from 'filenamify'\nimport chalk from 'chalk'\nimport readline from 'readline'\nimport util from 'util'\nimport cliTrunctate from 'cli-truncate'\n/* -imports */\n\nconst clearLine = () => {\n  readline.clearLine(process.stdout, 0)\n  readline.cursorTo(process.stdout, 0)\n}\n\nconst print = (...argv) => {\n  process.stdout.write(util.format(...argv))\n}\n\nconst log = (...argv) => console.log(...argv)\n\nexport default class Series extends Patch {\n  constructor (props, parsed = false) {\n    parsed = parsed || (props.last && props.patch)\n    const meta = parsed ? props : Series.parseMeta(props)\n    super(meta)\n    props = this.props\n    if (props.volumes) {\n      const { Volume } = this\n      props.volumes = props.volumes.map((vol, index) => {\n        return new Volume(Object.assign({}, vol, {\n          index,\n          base: this.targetDir\n        }))\n      })\n    } else {\n      props.volumes = []\n    }\n    if (props.chapters) {\n      const { Chapter } = this\n      props.chapters = props.chapters.map((ch, index) => {\n        let vol = (Number.isInteger(ch.volume) && props.volumes[ch.volume])\n        return new Chapter(Object.assign({}, ch, {\n          index,\n          volume: vol\n        }))\n      })\n    } else {\n      props.chapters = []\n    }\n    Object.defineProperties(this, {\n      sourceURL: { enumerable: true, get: () => this.props.sourceURL },\n      volumes: { enumerable: true,\n        get: () =>\n          (this.props.volumes.length && this.props.volumes) || undefined },\n      chapters: { enumerable: true,\n        get: () =>\n          (this.props.chapters.length && this.props.chapters) || undefined }\n    })\n  }\n\n  get Chapter () {\n    return BaseChapter\n  }\n\n  get Volume () {\n    return BaseVolume\n  }\n\n  get targetDir () {\n    return path.resolve(this.props.targetDir)\n  }\n\n  shouldLog (level) {\n    return this.props.verbose && this.props.verbose >= level\n  }\n\n  static parseMeta (props) {\n    let accepted = {\n      verbose: props.verbose && (parseInt(props.verbose) || 1),\n      overwrite: props.overwrite,\n      last: props.last,\n      patch: props.patch\n    }\n    try {\n      let url = new URL(props.source)\n      let name = props.name || filenamify(`${url.host}${url.pathname}`)\n      let targetDir = path.resolve(props.chdir || '', name)\n      let data = {}\n      try {\n        let fname = path.join(targetDir, 'index.json')\n        let fdata = JSON.parse(fs.readFileSync(fname, 'utf8'))\n        Object.assign(data, fdata)\n      } catch (err) {\n      }\n      return Object.assign(data, {\n        sourceURL: url,\n        targetDir\n      }, accepted)\n    } catch (err) {\n      try {\n        let fname = path.resolve(path.join(props.source, 'index.json'))\n        let data = JSON.parse(fs.readFileSync(fname, 'utf8'))\n        let targetDir = path.dirname(fname)\n        data.sourceURL = new URL(data.sourceURL)\n        return Object.assign(data, {\n          targetDir\n        }, accepted)\n      } catch (error) {\n        throw error\n      }\n    }\n  }\n\n  shouldUpdate () {\n    return true\n  }\n\n  async willUpdate (last, patch) {\n    const { props, Volume, Chapter } = this\n    const { volumes, chapters } = patch\n    if (volumes) {\n      patch.volumes = await Promise.all(volumes.map(async (data, index) => {\n        let config = (props.volumes[index] && props.volumes[index].props) || {}\n        let vol = new Volume(Object.assign(config, {\n          index,\n          base: this.targetDir\n        }))\n        vol = await vol.patch(Object.assign({}, data, {\n          index\n        }))\n        return vol\n      }))\n    }\n    if (chapters) {\n      const defers = []\n      patch.chapters = await Promise.all(chapters.map(async (data, index) => {\n        let volume = Number.isInteger(data.volume) && patch.volumes[data.volume]\n        let config = (props.chapters[index] && props.chapters[index].props) || {}\n        let ch = new Chapter(Object.assign(config, {\n          index,\n          volume,\n          base: this.targetDir,\n          overwrite: props.overwrite\n        }))\n        if (!volume) {\n          // Vol matching failed\n        }\n        ch = await ch.patch(Object.assign({}, data, {\n          index,\n          volume,\n          base: this.targetDir\n        }), false)\n        if (await ch.isPending()) {\n          defers.push([ch, () => ch.run()])\n        } else {\n          await ch.run()\n        }\n        return ch\n      }))\n      /* defer tasks */\n      patch.defers = defers\n      patch.delta = chapters.length -\n        ((props.chapters && props.chapters.length) || 0)\n    }\n    return super.willUpdate(last, patch)\n  }\n\n  async saveIndex () {\n    const fpath = path.join(this.props.targetDir, 'index.json')\n    fs.writeFileSync(fpath, JSON.stringify(this, null, 1), 'utf8')\n  }\n\n  async update () {\n    const { props } = this\n    const fpath = path.join(props.targetDir, 'index.json')\n    await makeDir(props.targetDir)\n    fs.writeFileSync(fpath, JSON.stringify(this, null, 1), 'utf8')\n    if (props.defers && props.defers.length) {\n      const shouldLog = this.shouldLog(1)\n      const length = props.defers.length\n      const shrink = props.defers.length > 16\n      if (shouldLog) {\n        log() /* new line */\n        print(chalk`  {green [${\n          props.chapters.length}]} {green =>} `)\n        if (props.delta) {\n          print(chalk`{green New ${\n            props.delta}}{gray ,} `)\n        }\n        log(chalk`{red Updated ${props.defers.length}}`)\n      }\n      if (shrink) {\n        for (const [index, [, defer]] of props.defers.entries()) {\n          await defer()\n          await this.saveIndex()\n          if (shouldLog) {\n            clearLine()\n            print(chalk`  {green =>} {gray [${index + 1}/${length}]}`)\n          }\n        }\n        if (shouldLog) {\n          clearLine()\n          log(chalk`  {gray [${length}/${length}]}`)\n        }\n      } else {\n        for (const [index, [ch, defer]] of props.defers.entries()) {\n          void index\n          await defer()\n          if (shouldLog) {\n            await ch.printInfo()\n          }\n          await this.saveIndex()\n        }\n      }\n      this.saveIndex()\n      if (shouldLog) {\n        log(chalk`  {green Completed}`)\n      }\n      delete props.defers\n      delete props.delta\n    } else {\n      clearLine()\n    }\n  }\n\n  async refresh () {\n    if (this.shouldLog(1)) {\n      const maxWidth = process.stdout.columns\n      let output = path.relative('.', this.targetDir)\n      let text = chalk`{gray #} {blue ${this.sourceURL}} {green =>} ${output}`\n      print(cliTrunctate(text, maxWidth))\n    } else if (this.shouldLog(2)) {\n    }\n    return this.fetch()\n  }\n\n  async fetch () {\n    return this.patch({})\n  }\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport crypto from 'crypto'\n/* -imports */\n\nconst hash = (buffer) => {\n  const integrity = crypto.createHash('sha256')\n    .update(buffer, 'utf8')\n    .digest('base64')\n  return integrity\n}\n\nexport default hash\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport mime from 'mime-types'\nimport { JSDOM } from 'jsdom'\n/* -imports */\n\nconst replaceImages = (doc, selector) => {\n  let imgs = []\n  for (const img of doc.querySelectorAll(selector)) {\n    let node = doc.createTextNode(`![](${img.src})`)\n    img.parentNode.replaceChild(node, img)\n    imgs.push(img.src)\n  }\n  return imgs\n}\n\nconst getExternal = async (options = {}) => {\n  const { prefix, oldFiles, files, urls } = options\n  const offset = files.length\n  const got = options.got || gotBase\n  let promises = urls.map(async (url, index) => {\n    const get = async () => {\n      let { body: content, headers } = await got(url, { encoding: null })\n      let fname = `${\n        prefix\n      } image ${\n        String(index + 1).padStart(2, '0')\n      }.${\n        mime.extension(headers['content-type']) || 'jpg'\n      }`\n      return { content, fname }\n    }\n    let old = oldFiles && oldFiles[index + offset]\n    if (old && old.fname && old.integrity && old.integrity === url) {\n      return {\n        fname: old.fname,\n        integrity: url,\n        buffer: async () => {\n          return (await get()).content\n        }\n      }\n    }\n    let { fname, content } = await get()\n    return {\n      fname,\n      integrity: url,\n      buffer: content\n    }\n  })\n  let datas = await Promise.all(promises)\n  for (const info of datas) {\n    files.push(info)\n  }\n}\n\nexport default async (options, handleDoc) => {\n  const got = options.got || gotBase\n  const oldFiles = options.files\n  /* prioritize props.doc */\n  if (options.buffer && !options.doc) {\n    return [\n      {\n        fname: `${options.prefix} ${options.title}.txt`,\n        integity: undefined,\n        buffer: options.buffer\n      }\n    ]\n  }\n  let doc = options.doc\n  if (!doc) {\n    if (!options.sourceURL) {\n      return\n    }\n    doc = await (async () => {\n      let { window: { document: doc } } =\n      new JSDOM((await got(options.sourceURL)).body, { url: options.sourceURL })\n      return doc\n    })()\n  }\n  let [ files, urls ] = await handleDoc(doc, {\n    getImages: replaceImages.bind(null, doc)\n  })\n  await getExternal({\n    prefix: options.prefix,\n    oldFiles,\n    files,\n    urls,\n    got\n  })\n  return files\n}\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport gotBase from 'got'\nimport cookie from 'cookie'\nimport { JSDOM } from 'jsdom'\nimport * as base from './base'\nimport hash from './utils/hash'\nimport toFiles from './utils/to-files'\n/* -imports */\n\nconst got = (url, config = {}) => {\n  url = new URL(url)\n  config.headers = Object.assign({}, config.headers)\n  if (/^novel18./.test(url.hostname)) {\n    config.headers.cookie = cookie.serialize('over18', 'yes')\n  }\n  return gotBase(url, config)\n}\n\nexport class Chapter extends base.Chapter {\n  async updateFiles () {\n    const { props } = this\n    const options = Object.assign({}, props, {\n      prefix: this.prefix,\n      got\n    })\n    return toFiles(options, async (doc, utils) => {\n      let files = []\n      let imgs = await utils.getImages('#novel_color img')\n      {\n        const buffer = await props.buffer\n        let text = buffer ? (\n          typeof buffer === 'function' ? await buffer() : buffer.toString()\n        ) : ''\n        const selectors = [\n          '.novel_subtitle',\n          '#novel_p',\n          '#novel_honbun',\n          '#novel_a'\n        ]\n        for (const sel of selectors) {\n          for (const node of doc.querySelectorAll(sel)) {\n            text += node.textContent + '\\n\\n-----\\n\\n'\n          }\n        }\n        files.push({\n          fname: this.getName(`${props.title}.txt`),\n          integity: undefined,\n          buffer: text\n        })\n      } /* -text */\n      return [ files, imgs ]\n    })\n  }\n}\n\nexport class Volume extends base.Volume {\n}\n\nexport class Series extends base.Series {\n  constructor (props, ...argv) {\n    super(props, ...argv)\n    if (!Series.test(this.sourceURL)) {\n      throw new Error('Invalid URL')\n    }\n  }\n  static test (url) {\n    return /^((http|https):\\/\\/|)(ncode|novel18).syosetu.com\\/[^/]+\\/?$/.test(url)\n  }\n  get Chapter () { return Chapter }\n  get Volume () { return Volume }\n\n  async fetch () {\n    const url = this.sourceURL\n    let { window: { document: doc } } = new JSDOM((await got(url)).body, { url: url })\n    let volumes = []\n    let chapters = []\n    let description = ''\n    {\n      const title = doc.querySelector('.novel_title')\n        .textContent.trim()\n      const author = doc.querySelector('.novel_writername')\n        .textContent.trim().substr('作者：'.length)\n      description = `# ${title}\\nAuthor: ${author}\\n\\n`\n      let singular = false\n      {\n        let dnode = doc.querySelector('#novel_ex')\n        if (dnode != null) {\n          description += dnode.textContent\n        } else {\n          singular = true\n        }\n        description += '\\n\\n-----\\n\\n'\n      }\n      chapters.push({\n        title: 'Description',\n        integrity: Date.now(),\n        buffer: () => description,\n        doc: singular ? doc : undefined\n      })\n    } /* -description */\n    let volumeIndex = -1\n    let indexBox = doc.querySelector('.index_box')\n    if (indexBox == null) {\n      return this.setProps({\n        chapters\n      })\n    }\n    let chaptersAsync = []\n    for (const node of indexBox.children) {\n      if (node.classList.contains('chapter_title')) {\n        let title = node.textContent.trim()\n        volumes.push({\n          title\n        })\n        description += `\\n## ${title}\\n`\n        ++volumeIndex\n      } else if (node.classList.contains('novel_sublist2')) {\n        let volIndex = Number(volumeIndex)\n        chaptersAsync.push((async () => {\n          let { textContent: title, href: link } = (() => {\n            let anode = node.firstElementChild.firstElementChild\n            if (anode.nodeName.toLowerCase() !== 'a') {\n              anode = node.querySelector('a')\n            }\n            return anode\n          })()\n          title = title.trim()\n          description += `${\n            String(chaptersAsync.length + 1).padStart(3, '0')\n          } ${title}\\n`\n          if (link.startsWith('//')) {\n            link = url.protocol + link\n          } else if (link.startsWith('/')) {\n            link = new URL(link, url.origin)\n          }\n          return {\n            volume: volIndex,\n            sourceURL: link,\n            title,\n            integrity: (() => {\n              let date = (() => {\n                let date = node.lastElementChild\n                if (date.classList.contains('long_update')) {\n                  return date\n                } else {\n                  return node.querySelector('.long_update')\n                }\n              })()\n              let span = date.lastElementChild\n              if (span) {\n                return span.title.trim()\n              } else {\n                return date.innerHTML.trim()\n              }\n            })()\n          }\n        })())\n      } else {\n        /* unexpected node */\n      }\n    }\n    chapters[0].integrity = hash(description)\n    chapters = chapters.concat(await Promise.all(chaptersAsync))\n    return this.patch({\n      volumes,\n      chapters\n    })\n  }\n}\n\nexport default Series\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport * as base from './base'\nimport { JSDOM } from 'jsdom'\nimport got from 'got'\nimport hash from './utils/hash'\nimport toFiles from './utils/to-files'\n/* -imports */\n\nexport class Chapter extends base.Chapter {\n  async updateFiles () {\n    const { props } = this\n    const options = Object.assign({}, props, {\n      prefix: this.prefix,\n      got\n    })\n    return toFiles(options, async (doc, utils) => {\n      let files = []\n      let imgs = utils.getImages('#contentMain-inner img')\n      let rootNode = doc.getElementById('contentMain-inner')\n      {\n        const buffer = await props.buffer\n        let text = buffer ? (\n          typeof buffer === 'function' ? await buffer() : buffer.toString()\n        ) : ''\n        const selectors = [\n          'widget-episodeTitle',\n          'widget-episode'\n        ]\n        for (const sel of selectors) {\n          for (const node of rootNode.getElementsByClassName(sel)) {\n            text += node.textContent + '\\n\\n-----\\n\\n'\n          }\n        }\n        files.push({\n          fname: this.getName(`${props.title}.txt`),\n          integity: undefined,\n          buffer: text\n        })\n      }\n      return [ files, imgs ]\n    })\n  }\n}\n\nexport class Volume extends base.Volume {\n}\n\nexport class Series extends base.Series {\n  static test (url) {\n    return /^((http|https):\\/\\/|)kakuyomu.jp\\/works\\/[^/]+\\/?$/.test(url)\n  }\n\n  get Chapter () { return Chapter }\n  get Volume () { return Volume }\n\n  async fetch () {\n    const url = this.sourceURL\n    let { window: { document: doc } } = new JSDOM((await got(url)).body, { url: url })\n    let volumes = []\n    let chapters = []\n    let description = ''\n    {\n      let text = ''\n      text += doc.getElementById('workTitle').textContent + '\\n'\n      text += `Author: ${\n        doc.getElementById('workAuthor-activityName').textContent}\\n`\n      text += `\\n${\n        doc.getElementById('introduction').textContent}\\n`\n      description += text\n      text = undefined\n      chapters.push({\n        title: 'Description',\n        integrity: Date.now(),\n        buffer: () => description\n      })\n    }\n    let volumeIndex = -1\n    for (const toc of doc.getElementsByClassName('widget-toc-items')) {\n      for (const ep of toc.children) {\n        if (ep.classList.contains('widget-toc-chapter')) {\n          let title = ep.textContent.trim()\n          volumes.push({\n            title\n          })\n          description += `\\n## ${title}\\n`\n          ++volumeIndex\n        } else {\n          let a = ep.getElementsByClassName('widget-toc-episode-episodeTitle')[0]\n          let sourceURL = a.href\n          let title = a.getElementsByClassName('widget-toc-episode-titleLabel')[0].textContent\n          let integrity = a.getElementsByClassName('widget-toc-episode-datePublished')[0]\n            .getAttribute('datetime')\n          description += `${\n            String(chapters.length).padStart(3, '0')\n          } ${title}\\n`\n          chapters.push({\n            volume: volumeIndex,\n            sourceURL,\n            title,\n            integrity\n          })\n        }\n      }\n    }\n    chapters[0].integrity = hash(description)\n    return this.patch({\n      volumes,\n      chapters\n    })\n  }\n}\n\nexport default Series\n","/**\n * @file Get module\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Series } from './base'\nimport eSyosetu from './engine-syosetu'\nimport eKakuyomu from './engine-kakuyomu'\n/* -imports */\n\nconst engines = [\n  eSyosetu,\n  eKakuyomu\n]\n\nexport default async (options) => {\n  const meta = Series.parseMeta(options)\n  const engine = (async () => {\n    for (const Engine of engines) {\n      if (Engine.test(meta.sourceURL)) {\n        return new Engine(meta, true)\n      }\n    }\n  })()\n  if (!engine) {\n    throw new Error('Failed to find a matching engine')\n  }\n  return engine\n}\n"],"names":["Patch","constructor","props","Object","assign","defineProperties","this","writable","value","patch","run","copy","last","shouldUpdate","willUpdate","update","didUpdate","getOwnPropertyNames","length","FileInfo","options","chapter","integrity","enumerable","fname","buffer","path","join","dirRelative","dirAbsolute","exists","fs","accessSync","absolute","error","force","writeFileSync","flag","remove","relative","unlinkSync","Chapter","files","map","data","index","get","title","volume","vol","Number","isInteger","getName","filenamify","prefix","toString","padStart","base","process","cwd","names","info","entries","pInfo","arguments","makeDir","sync","Promise","all","err","updateFiles","undefined","write","overwrite","printInfo","console","log","chalk","Volume","resolve","filename","clearLine","readline","stdout","cursorTo","print","argv","util","format","Series","parsed","parseMeta","volumes","targetDir","chapters","ch","sourceURL","BaseChapter","BaseVolume","shouldLog","level","verbose","accepted","parseInt","url","URL","source","name","host","pathname","chdir","fdata","JSON","parse","readFileSync","dirname","async","config","defers","isPending","push","delta","super","fpath","stringify","shrink","defer","saveIndex","maxWidth","columns","output","text","cliTrunctate","fetch","hash","crypto","createHash","digest","replaceImages","doc","selector","imgs","img","querySelectorAll","node","createTextNode","src","parentNode","replaceChild","getExternal","oldFiles","urls","offset","got","gotBase","promises","body","content","headers","encoding","String","mime","extension","old","datas","handleDoc","integity","window","document","JSDOM","getImages","bind","test","hostname","cookie","serialize","toFiles","utils","selectors","sel","textContent","Error","description","querySelector","trim","author","substr","singular","dnode","Date","now","volumeIndex","indexBox","setProps","chaptersAsync","children","classList","contains","volIndex","href","link","anode","firstElementChild","nodeName","toLowerCase","startsWith","protocol","origin","date","lastElementChild","span","innerHTML","concat","rootNode","getElementById","getElementsByClassName","toc","ep","a","getAttribute","engines","eSyosetu","eKakuyomu","meta","engine","Engine"],"mappings":"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"}