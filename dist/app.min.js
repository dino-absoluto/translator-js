"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var yargs=_interopDefault(require("yargs")),path=_interopDefault(require("path")),chalk=_interopDefault(require("chalk")),name="translator-js",version="4.0.0",description="Scripts to support novel translation",bin={"translator-js":"bin/app.js"},main="src/index.js",repository="git@github.com:dino-absoluto/translator-js.git",author="Dino",license="GPL-3.0",scripts={standard:"standard",test:"jest"},dependencies={chalk:"^2.3.2","cli-truncate":"^1.1.0",cookie:"^0.3.1",filenamify:"^2.1.0",globby:"^8.0.1",got:"^9.3.2",jsdom:"^13.0.0","make-dir":"^1.3.0","mime-types":"^2.1.21",yargs:"^12.0.5"},devDependencies={"@babel/core":"^7.1.6","@babel/plugin-proposal-class-properties":"^7.1.0","@babel/plugin-syntax-dynamic-import":"^7.0.0","@babel/plugin-syntax-import-meta":"^7.0.0","@babel/preset-env":"^7.1.6","@babel/register":"^7.0.0","babel-core":"^7.0.0-bridge.0","babel-eslint":"^10.0.1","babel-jest":"^23.6.0","babel-plugin-dynamic-import-node":"^2.2.0","builtin-modules":"^3.0.0",clone:"^2.1.2",del:"^3.0.0",gulp:"^4.0.0",hasha:"^3.0.0",jest:"^23.6.0",rollup:"^0.67.3","rollup-plugin-babel":"^4.0.3","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-json":"^3.1.0","rollup-plugin-node-resolve":"^3.4.0","rollup-plugin-terser":"^3.0.0",standard:"^12.0.1"},eslintConfig={parser:"babel-eslint",extends:["standard"]},babel={presets:[["@babel/env",{useBuiltIns:"entry",targets:{node:!0}}]],plugins:["@babel/plugin-syntax-dynamic-import","@babel/plugin-syntax-import-meta","@babel/plugin-proposal-class-properties","babel-plugin-dynamic-import-node"]},jest={testEnvironment:"node",roots:["<rootDir>/src/","<rootDir>/tests/"],moduleDirectories:["node_modules","<rootDir>/jest/mods"],transform:{"^.+\\.(js|mjs|jsx)$":"babel-jest"},testMatch:["**/?(*.)+(spec|test).(js|mjs|jsx)"],moduleFileExtensions:["js","mjs","json","jsx","node"]},_package={name:name,version:version,description:description,bin:bin,main:main,repository:repository,author:author,license:license,private:!0,scripts:scripts,dependencies:dependencies,devDependencies:devDependencies,eslintConfig:eslintConfig,babel:babel,jest:jest},_package$1=Object.freeze({name:name,version:version,description:description,bin:bin,main:main,repository:repository,author:author,license:license,scripts:scripts,dependencies:dependencies,devDependencies:devDependencies,eslintConfig:eslintConfig,babel:babel,jest:jest,default:_package});function getCjsExportFromNamespace(e){return e&&e.default||e}var require$$0=getCjsExportFromNamespace(_package$1);const config={version:require$$0.version,sourceDir:__dirname};var config_1=config;const report=e=>{console.error(chalk`{red ${report.stack?e.stack:e}}`),report.pedantic&&process.exit(-1)};report.pedantic=!0;const _postParse=e=>{report.stack=!!e.stack,report.pedantic=!!e.pedantic},_glob=async e=>{const t=await Promise.resolve(require("globby"));if(e.sources&&e.sources.length)return;let s=await t(path.join(e.output,"*/index.json"));e.sources=s.map(e=>path.dirname(e))},_get=async e=>{const t=(await Promise.resolve(require("./app.min2.js"))).default;let s=e.output||"./download/";for(const r of e.sources)try{let o=await t({source:r,verbose:!0,chdir:s,overwrite:e.force});await o.refresh()}catch(e){report(e)}},cmdGet=async e=>{await _postParse(e),await _glob(e),await _get(e)},_parseArgs=async()=>yargs.strict(!0).usage("$0 get [--output=<path>] [options] [<URL> | <path>..]").help("help").alias("help","h").version(config_1.version).group(["help","version"],"Info:").option("stack",{hidden:!0,default:!1,type:"boolean"}).option("output",{alias:["o"],default:"download",type:"string",desc:"Output directory"}).option("force",{alias:["f"],default:!1,type:"boolean",desc:"Overwrite untracked files"}).option("pedantic",{default:!0,type:"boolean",desc:"Exit on first error"}).command("get [<sources>..]","Get RAWs",e=>e.strict().usage("$0 get [--output=<path>] [options] [<URL> | <path>..]").argv,cmdGet).demandCommand(1).fail(e=>{yargs.showHelp(),report(e)}).argv,_main=async()=>{await _parseArgs()};_main().catch(report);
//# sourceMappingURL=app.min.js.map
