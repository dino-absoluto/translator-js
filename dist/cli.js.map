{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/flow.ts","webpack:///external \"path\"","webpack:///external \"chalk\"","webpack:///external \"jsdom\"","webpack:///external \"p-limit\"","webpack:///./src/get/providers/context.ts","webpack:///external \"fs\"","webpack:///./src/cli/cli.ts","webpack:///./src/cli/shared.ts","webpack:///external \"yargs\"","webpack:///./src/get/cli-interface.ts","webpack:///external \"progress\"","webpack:///external \"cli-truncate\"","webpack:///./src/get/index.ts","webpack:///./src/get/core/index.ts","webpack:///./src/get/core/series.ts","webpack:///./src/get/providers/index.ts","webpack:///./src/get/providers/syosetu.ts","webpack:///./src/get/providers/utils.ts","webpack:///external \"mime\"","webpack:///./src/utils/syosetu-fetch.ts","webpack:///external \"cookie\"","webpack:///external \"node-fetch\"","webpack:///external \"filenamify\"","webpack:///./src/get/core/fs.ts","webpack:///./src/utils/pfs.ts","webpack:///external \"util\"","webpack:///external \"make-dir\"","webpack:///./src/get/core/episode.ts","webpack:///external \"zlib\"","webpack:///external \"lodash/throttle\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","trim","text","length","flow","then","fn","undefined","require","flow_1","jsdom_1","path","filenamify","Node","JSDOM","dom","window","isElementNode","node","nodeType","ELEMENT_NODE","Context","[object Object]","this","names","Set","urls","Map","normalize","ext","extname","base","basename","has","add","url","filename","set","render","tokenize","tokens","tok","tt","type","ruby","resolveURL","nodes","reduce","acc","cnode","concat","TEXT_NODE","textContent","replace","nodeName","querySelector","rb","children","rt","nextSibling","startsWith","a","href","querySelectorAll","all","push","img","alt","src","tokenizeArray","childNodes","SimpleContext","bufs","unsafeName","resolveName","data","Array","isArray","shared_1","cmdGet","chalk_1","parser","command","help","fail","msg","err","showHelp","console","log","default","red","stack","error","parse","toString","yargs","strict","usage","demandCommand","group","option","hidden","desc","Progress","cliTruncate","CWD","resolve","handler","async","argv","sources","Error","checkFs","outputDir","Series","Promise","novels","map","overwrite","sourceURL","shift","dirname","fpath","novel","columns","process","stdout","prg","ready","report","updateIndex","onProgress","_c","total","tick","limit","Math","floor","container","complete","incomplete","width","clear","updates","news","newsLength","index","chapter","slice","padStart","describe","builder","coerce","values","URL","_a","relative","requiresArg","core_1","SeriesOptions","series_1","providers_1","fs_1","episode_1","options","assign","metaFile","Folder","join","requestFolder","requestFile","loadURL","load","getNovel","id","buffer","read","json","JSON","verify","code","author","description","genre","keywords","status","hasMeta","fetch","renameable","rename","write","stringify","progress","update","episodes","EpisodeList","fetchIndex","updateWith","initialized","domains","register","provider","domain","acceptDomains","getProvider","host","fromURL","utils_1","context_1","SyosetuChapter","updateId","main","fetchDOM","getElementById","forEach","tokensArray","imagePromises","fetchFile","images","content","ctx","mapURL","buf","_name","sections","toks","unshift","SyosetuNovel","hostname","indexOf","over18","paths","pathname","split","indexURL","rootURL","infoURL","doc","body","innerHTML","h1","getElementsByTagName","lines","completed","size","match","parseInt","indexBox","getElementsByClassName","chapters","classList","contains","timestamp","firstElementChild","tagName","link","col","span","getAttribute","Syosetu","mime","syosetu_fetch_1","document","res","disp","headers","getExtension","cookie","node_fetch_1","syosetuLimit","init","endsWith","Headers","test","serialize","pfs","makeDir","sanitizeName","parent","_accessed","_dirname","delete","close","rmdir","newName","oldName","parentDir","entry","File","_filename","access","real","unlink","readFile","writeFile","fs","util_1","constants","promisify","zlib_1","p_limit_1","throttle","prefix","super","files","rootDir","pad0","saveThrottle","save","groups","compressedCache","folders","newData","preprocess","oldLength","updateGroups","tasks","entries","pingEpisode","item","count","updateEpisode","flush","gzipSync","gunzipSync","folder","ep","ch","groupId","file","isEpisodeUptodate","remove","context","Buffer","from","groupName","cache","decode","encode"],"mappings":"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","file":"cli.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\n * @file Syosetu, override default options\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\n/* code */\nexport const trim = (text: string | undefined | null): string | undefined => {\n  if (!text) {\n    return\n  }\n  text = text.trim()\n  if (!text.length) {\n    return\n  }\n  return text\n}\n\nexport const flow = <T> (value: T) => {\n  return {\n    then <O> (fn: (input: NonNullable<T>) => O) {\n      if (value) {\n        return flow(fn(value as NonNullable<T>))\n      } else {\n        return flow<O>(undefined as unknown as O)\n      }\n    },\n    value\n  }\n}\n","module.exports = require(\"path\");","module.exports = require(\"chalk\");","module.exports = require(\"jsdom\");","module.exports = require(\"p-limit\");","/**\n * @file Default context\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { flow, trim } from '../../utils/flow'\nimport { JSDOM } from 'jsdom'\nimport * as path from 'path'\nimport filenamify = require('filenamify')\n/* code */\n\nconst Node = flow(new JSDOM()).then(dom => {\n  return dom.window.Node\n}).value\n\ninterface TokenBr {\n  type: 'br'\n}\n\ninterface TokenString {\n  type: 'text'\n  text: string\n}\n\ninterface TokenRuby {\n  type: 'ruby'\n  text: string\n  ruby: string\n}\n\ninterface TokenImage {\n  type: 'image'\n  url: string\n  text: string\n}\n\ninterface TokenLink {\n  type: 'link'\n  url: string\n  text: string\n}\n\nexport type Token = TokenBr | TokenString | TokenRuby | TokenImage | TokenLink\n\nconst isElementNode = (node: Node): node is HTMLElement =>\n  node.nodeType === Node.ELEMENT_NODE\n\nexport type ContextCallback = (name: string) => Buffer | string[]\n\nexport abstract class Context {\n  private names = new Set<string>()\n  private urls = new Map<string, string>()\n  abstract requestFile (\n    name: string,\n    fn: ContextCallback): void\n  resolveName (name: string) {\n    name = path.normalize(trim(name) || '')\n    if (name === '.') {\n      return\n    }\n    const ext = path.extname(name)\n    const base = filenamify(path.basename(name, ext))\n    name = base + ext\n    const { names } = this\n    if (!names.has(name)) {\n      names.add(name)\n      return name\n    }\n    for (let i = 1; i < 100; i++) {\n      const name = `${base} (${i})${ext}`\n      if (!names.has(name)) {\n        names.add(name)\n        return name\n      }\n    }\n    return ''\n  }\n\n  mapURL (url: string, filename: string) {\n    this.urls.set(url, filename)\n  }\n\n  resolveURL (url: string): string {\n    return this.urls.get(url) || url\n  }\n\n  parseNode (node: Node): string {\n    return this.render(Context.tokenize(node))\n  }\n\n  render (tokens: Token[]): string {\n    let text = ''\n    for (const tok of tokens) {\n      let tt: string\n      switch (tok.type) {\n        case 'text': {\n          tt = tok.text\n          break\n        }\n        case 'ruby': {\n          tt = `${tok.text}(${tok.ruby})`\n          break\n        }\n        case 'link': {\n          tt = `[${tok.text}](${this.resolveURL(tok.url)})`\n          break\n        }\n        case 'image': {\n          tt = `![${tok.text}](${this.resolveURL(tok.url)})`\n          break\n        }\n        case 'br': {\n          tt = '\\n'\n          break\n        }\n        default:\n          tt = ''\n          break\n      }\n      text += tt\n    }\n    return text\n  }\n\n  static tokenizeArray (nodes: NodeList): Token[] {\n    return [...nodes].reduce((acc, cnode) => {\n      return acc.concat(Context.tokenize(cnode))\n    }, [] as Token[])\n  }\n\n  static tokenize (node: Node): Token[] {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return [{\n        type: 'text',\n        text: (node.textContent || '').replace(/^\\n|\\n$/g, '')\n      }]\n    }\n    if (!isElementNode(node)) {\n      return []\n    }\n    switch (node.nodeName) {\n      case 'RUBY': {\n        const text = trim(flow(node.querySelector('rb'))\n          .then(rb => rb.textContent)\n          .value ||\n        flow([...node.children]).then(children => {\n          let text = ''\n          for (const node of children) {\n            if (node.nodeType === Node.TEXT_NODE) {\n              text += node.textContent\n            }\n          }\n          return text\n        }).value || node.textContent)\n        if (text) {\n          const ruby = flow(node.querySelector('rt')).then(rt => {\n            return trim(rt.textContent)\n          }).value\n          if (ruby && text !== ruby) {\n            return [{\n              type: 'ruby',\n              text,\n              ruby\n            }]\n          } else {\n            return [{\n              type: 'text',\n              text\n            }]\n          }\n        } else {\n          return []\n        }\n      }\n      case 'BR': {\n        if (flow(node.nextSibling)\n          .then(n => n.nodeType === Node.TEXT_NODE && n.textContent || undefined)\n          .then(t => t.startsWith('\\n'))) {\n          return []\n        }\n        return [{\n          type: 'br'\n        }]\n      }\n      case 'A': {\n        const a = node as HTMLLinkElement\n        const tok: Token = {\n          type: 'link',\n          text: a.textContent || a.href,\n          url: a.href\n        }\n        const tokens = [...a.querySelectorAll('img')].reduce(\n          (all, node) => all.concat(this.tokenize(node)), [] as Token[])\n        if (tokens.length) {\n          tokens.push({\n            type: 'br'\n          })\n          tokens.push(tok)\n          return tokens\n        }\n        return [tok]\n      }\n      case 'IMG': {\n        const img = node as HTMLImageElement\n        return [{\n          type: 'image',\n          text: img.alt,\n          url: img.src\n        }]\n      }\n      case 'IFRAME':\n      case 'VIDEO':\n      case 'EMBEDED': {\n        return []\n      }\n      case 'P': {\n        const tokens = Context.tokenizeArray(node.childNodes)\n        tokens.push({\n          type: 'br'\n        })\n        return tokens\n      }\n      default: {\n        return Context.tokenizeArray(node.childNodes)\n      }\n    }\n    // return []\n  }\n}\n\nexport class SimpleContext extends Context {\n  text: ([string, string[]])[] = []\n  bufs: ([string, Buffer])[] = []\n  requestFile (unsafeName: string, get: ContextCallback) {\n    const name = this.resolveName(unsafeName)\n    if (!name) {\n      return\n    }\n    let data = get(name)\n    if (Array.isArray(data)) {\n      this.text.push([name, data as string[]])\n    } else {\n      this.bufs.push([name, data as Buffer])\n    }\n  }\n}\n","module.exports = require(\"fs\");","/**\n * @file CLI interface\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { parser as yargs } from './shared'\nimport * as cmdGet from '../get/cli-interface'\nimport chalk from 'chalk'\n\ntry {\n  yargs\n    .command(cmdGet)\n    .help()\n    .fail((msg, err) => {\n      yargs.showHelp()\n      if (err) {\n        console.log(chalk.red(err.stack || ''))\n      } else {\n        console.error(chalk.red(msg))\n      }\n    })\n    .parse()\n} catch (err) {\n  console.error(chalk.red((err.stack || '').toString()))\n}\n","/**\n * @file CLI interface\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport yargs = require('yargs')\n\nexport const parser = yargs.strict(true)\n  .usage('$0 <cmd> [args]')\n  .demandCommand(1)\n  .group([ 'help', 'version' ], 'Info:')\n  .option('pedantic', {\n    default: true,\n    hidden: true,\n    type: 'boolean',\n    desc: 'Exit on first error'\n  })\nexport type Parser = typeof parser\nexport type SharedOptions = typeof parser.argv\n\nexport namespace Cmd {\n  export type Command = string | string[]\n  export type Aliases = string | string[]\n  export type Describe = string | false\n  export type Builder = (yargs: Parser) => Parser\n  export type Handler = (argv: SharedOptions) => void\n}\n","module.exports = require(\"yargs\");","/**\n * @file CLI interface\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { SharedOptions, Cmd } from '../cli/shared'\nimport * as path from 'path'\nimport chalk from 'chalk'\nimport Progress = require('progress')\nimport cliTruncate = require('cli-truncate')\n\n/* code */\nconst CWD = path.resolve('.')\nconst MAX_LOG = 20\n\ntype ArgString = string | string[]\n\ninterface SourceURL {\n  type: 'url'\n  url: URL\n}\n\ninterface SourceFolder {\n  type: 'folder'\n  fpath: string\n}\n\ntype Source = SourceURL | SourceFolder\n\ninterface CmdOptions extends SharedOptions {\n  sources?: Source[]\n  name?: string[]\n  outputDir?: string\n  overwrite?: boolean\n}\n\nexport const handler: Cmd.Handler = async (argv: CmdOptions) => {\n  if (!argv.sources) {\n    throw new Error('no sources specified')\n  }\n  // console.log(argv)\n  const checkFs = !!argv.checkFs\n  const outputDir = argv.outputDir || path.resolve('download')\n  const { Series } = await import('.')\n  const names = argv.name || []\n  const novels = argv.sources.map(src => {\n    if (src.type === 'url') {\n      return new Series({\n        overwrite: argv.overwrite,\n        outputDir,\n        sourceURL: src.url.toString(),\n        basename: names.shift()\n      })\n    } else {\n      return new Series({\n        overwrite: argv.overwrite,\n        outputDir: path.dirname(src.fpath),\n        basename: path.basename(src.fpath)\n      })\n    }\n  })\n  for (const novel of novels) {\n    const columns = process.stdout.columns || 40\n    let prg: Progress | undefined\n    await novel.ready\n    const report = await novel.updateIndex({\n      onProgress: (novel, _c, total) => {\n        if (prg) {\n          prg.tick()\n        } else {\n          const limit = Math.floor(columns / 2) - total.toString().length * 2\n          const name = cliTruncate(`${\n            path.basename(novel.container.name || 'unknown')}`, limit)\n          prg = new Progress(\n            chalk`{gray [{green :bar}] [:current/:total]} ${name}`, {\n              complete: '█',\n              incomplete: '░',\n              width: Math.floor(columns / 3),\n              clear: true,\n              total\n            })\n        }\n      },\n      checkFs\n    })\n    console.log(chalk`{gray [{yellow ${\n      report.updates.length.toString()\n    } updated}, {green ${\n      report.news.length.toString()\n    } new}]} ${\n      path.basename(novel.container.name || 'unknown')\n    }`)\n    const newsLength = report.news.length\n    for (const { index, chapter } of report.news.slice(0, MAX_LOG)) {\n      console.log(chalk`{green ${\n        index.toString().padStart(3, '0')\n      }} ${chapter.name}`)\n    }\n    if (report.news.length > MAX_LOG) {\n      console.log(chalk`...and {green ${newsLength.toString()}} more chapters`)\n    }\n  }\n}\n\nexport const command: Cmd.Command = 'get [<sources>..]'\nexport const describe: Cmd.Describe = 'Download novel from sources'\nexport const builder: Cmd.Builder = yargs =>\n  yargs.strict()\n  .usage('$0 get [--output-dir=<path>] [options] [<URL> | <path>..]')\n  .coerce('sources', (values: ArgString): Source[] => {\n    if (!Array.isArray(values)) {\n      values = [ values ]\n    }\n    return values.map(a => {\n      try {\n        return {\n          type: 'url',\n          url: new URL(a)\n        } as SourceURL\n      } catch {\n        return {\n          type: 'folder',\n          fpath: path.relative(CWD, path.resolve(a))\n        } as SourceFolder\n      }\n    })\n  })\n  .option('output-dir', {\n    type: 'string',\n    default: 'download',\n    requiresArg: true,\n    coerce: values => {\n      if (Array.isArray(values)) {\n        throw new Error('--output-dir was used twice')\n      }\n      return path.normalize(values)\n    },\n    desc: 'Output directory'\n  })\n  .option('name', {\n    type: 'string',\n    requiresArg: true,\n    coerce: values => {\n      if (!Array.isArray(values)) {\n        return [ values ]\n      }\n      return values\n    },\n    desc: 'Hint to name new folder'\n  })\n  .option('overwrite', {\n    type: 'boolean',\n    default: false,\n    desc: 'Force overwriting exist data'\n  })\n  .option('check-fs', {\n    type: 'boolean',\n    default: false,\n    desc: 'Download missing files'\n  })\n","module.exports = require(\"progress\");","module.exports = require(\"cli-truncate\");","/**\n * @file index.ts\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\n/* exports */\nexport { Series, SeriesOptions } from './core'\n/* code */\n","/**\n * @file index.ts\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\n/* exports */\nexport {\n  Series, SeriesOptions\n} from './series'\n/* code */\n","/**\n * @file Series\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Novel, NovelData } from '../providers/common'\nimport { getNovel } from '../providers'\nimport { Folder, File } from './fs'\nimport { EpisodeList, ProgressFn } from './episode'\nimport * as path from 'path'\n/* code */\n\ntype SeriesProgressFn = (series: Series, c: number, total: number) => void\n\nexport interface SeriesOptions {\n  outputDir: string\n  sourceURL?: string\n  basename?: string\n  data?: NovelData\n  overwrite?: boolean\n  novel?: Novel\n}\n\nexport class Series {\n  private novel?: Novel\n  private episodes?: EpisodeList\n  readonly data: NovelData\n  readonly container: Folder\n  readonly metaFile: File\n  readonly ready: Promise<void>\n  readonly overwrite: boolean\n  constructor (options: SeriesOptions) {\n    const data = Object.assign({}, options.novel, options.data)\n    this.data = data\n    this.novel = options.novel\n    this.overwrite = !!options.overwrite\n    let container: Folder\n    const name = options.basename || this.data.name\n    data.name = name\n    if (options.basename) {\n      container = new Folder(null,\n        path.join(options.outputDir,options.basename))\n    } else {\n      const rootDir = new Folder(null, options.outputDir)\n      container = rootDir.requestFolder(name || '')\n    }\n    const metaFile = container.requestFile('index.json')\n    this.container = container\n    this.metaFile = metaFile\n    this.ready = (async () => {\n      if (!this.novel && options.sourceURL) {\n        await this.loadURL(options.sourceURL)\n      }\n      if (name) {\n        await this.load()\n      }\n    })()\n  }\n\n  private async loadURL (sourceURL: string) {\n    try {\n      const url = new URL(sourceURL)\n      this.novel = await getNovel(url)\n    } catch {\n      throw new Error('failed to get novel')\n    }\n  }\n\n  private async verify (data: any): Promise<NovelData | undefined> {\n    if (!data || typeof data !== 'object') {\n      return\n    }\n    if (data.sourceURL) {\n      if (!this.overwrite) {\n        throw new Error('unsupported older version, use overwrite to refresh')\n      } else if (!this.novel) {\n        try {\n          const url = new URL(data.sourceURL)\n          this.novel = await getNovel(url)\n        } catch {\n          throw new Error('failed to get novel')\n        }\n      }\n    }\n    if (data.id) {\n      return data\n    }\n  }\n\n  async load () {\n    const { metaFile, data, data: { name } } = this\n    if (!name) {\n      return\n    }\n    try {\n      const buffer = await metaFile.read()\n      const json = JSON.parse(buffer.toString())\n      Object.assign(data, await this.verify(json))\n      if (!this.novel && data.url) {\n        await this.loadURL(data.url)\n      }\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        throw err\n      }\n    }\n  }\n\n  hasMeta (): boolean {\n    const { data } = this\n    return !!(data.name &&\n      data.author &&\n      data.description &&\n      data.genre &&\n      data.keywords &&\n      data.status)\n  }\n\n  async update () {\n    const { novel, data } = this\n    if (!novel) {\n      throw new Error('novel is undefined')\n    }\n    if (!this.hasMeta()) {\n      await novel.fetch()\n    }\n    Object.assign(data, novel)\n    const name = data.name\n    if (name && this.container.renameable) {\n      await this.container.rename(name)\n    }\n    await this.metaFile.write(JSON.stringify(data, null, 1))\n  }\n\n  async updateIndex (options: {\n    onProgress?: SeriesProgressFn,\n    checkFs?: boolean\n  } = {}) {\n    const { onProgress, checkFs = false } = options\n    let progress: ProgressFn | undefined\n    if (onProgress) {\n      progress = onProgress.bind(undefined, this)\n    }\n    await this.update()\n    if (!this.episodes) {\n      this.episodes = new EpisodeList(this.container)\n    }\n    const { novel, episodes } = this\n    if (!novel) {\n      throw new Error('novel is undefined')\n    }\n    await episodes.ready\n    const index = await novel.fetchIndex()\n    return episodes.updateWith(index, {\n      progress,\n      checkFs\n    })\n  }\n}\n","/**\n * @file index.ts\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Provider, Novel } from './common'\n/* code */\n\nlet initialized: Promise<void>\nconst domains = new Map()\n\nexport const register = (provider: Provider) => {\n  for (const domain of provider.acceptDomains) {\n    if (domains.has(domain)) {\n      throw new Error(`'${domain}' domain existed`)\n    }\n    domains.set(domain, provider)\n  }\n}\n\nexport const getProvider = async (url: URL): Promise<Provider> => {\n  if (!initialized) {\n    initialized = (async () => {\n      register((await import('./syosetu')).default)\n    })()\n    await initialized\n    return getProvider(url)\n  }\n  let value = domains.get(url.host)\n  if (!value) {\n    throw new Error('no matching provider')\n  }\n  return value\n}\n\nexport const getNovel = async (url: URL): Promise<Novel> => {\n  const provider = await getProvider(url)\n  let value = provider.fromURL(url)\n  if (!value) {\n    throw new Error('failed to create Novel instance')\n  }\n  return value\n}\n","/**\n * @file Syosetu provider\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { Provider, Novel, NovelData, Chapter, RenderFn } from './common'\nimport { trim, flow } from '../../utils/flow'\nimport { fetchDOM, fetchFile } from './utils'\nimport { Context } from './context'\n/* code */\n\nexport class SyosetuChapter implements Chapter {\n  private url: URL\n  group?: string\n  name: string\n  updateId?: string\n  content?: RenderFn\n  constructor (options: {\n    url: URL\n    group?: string\n    name: string\n    updateId?: string\n  }) {\n    this.url = options.url\n    this.group = options.group\n    this.name = options.name\n    this.updateId = options.updateId\n  }\n\n  async fetch () {\n    const url = this.url.toString()\n    const doc = await fetchDOM(url)\n    const main = doc.getElementById('novel_contents')\n    if (!main) {\n      return\n    }\n    flow(main.querySelector('.novel_subtitle'))\n      .then(node => trim(node.textContent))\n      .then(text => {\n        this.name = text\n      })\n    const nodes: Element[] = []\n    ;[\n      '#novel_p',\n      '#novel_honbun',\n      '#novel_a'\n    ].forEach(id => flow(main.querySelector(id)).then(node => {\n      nodes.push(node)\n    }))\n    const tokensArray = nodes.map(Context.tokenize)\n    const imagePromises: ReturnType<typeof fetchFile>[] = []\n    for (const tokens of tokensArray) {\n      for (const tok of tokens) {\n        if (tok.type === 'image') {\n          imagePromises.push(fetchFile(tok.url))\n        }\n      }\n    }\n    const images = await Promise.all(imagePromises)\n    this.content = (ctx) => {\n      for (const img of images) {\n        ctx.requestFile(img.name, filename => {\n          ctx.mapURL(img.url, filename)\n          return img.buf\n        })\n      }\n      ctx.requestFile(this.name + '.txt', (_name) => {\n        const sections = tokensArray.map(toks => ctx.render(toks))\n        sections.unshift(this.name)\n        return sections\n      })\n    }\n  }\n}\n\ninterface SyosetuNovelData extends NovelData {\n  readonly over18?: boolean\n  readonly url: string\n}\n\nexport class SyosetuNovel implements Novel, SyosetuNovelData {\n  readonly id: string\n  readonly url: string\n  readonly over18: boolean\n  name?: string\n  author?: string\n  description?: string\n  keywords?: string[]\n  genre?: string\n  status?: {\n    completed: boolean\n    size: number\n  }\n\n  constructor (url: URL) {\n    const hostname = url.hostname\n    if (hostname.indexOf('novel18.') === 0) {\n      this.over18 = true\n    } else if (hostname.indexOf('ncode.') === 0) {\n      this.over18 = false\n    } else {\n      throw new Error('wrong domain')\n    }\n    const paths = url.pathname.split('/', 2)\n    if (paths.length < 2) {\n      throw new Error('invalid pathname')\n    }\n    this.id = paths[1]\n    this.url = this.indexURL\n  }\n\n  get rootURL () {\n    return `https://${this.over18 ? 'novel18' : 'ncode'}.syosetu.com/`\n  }\n\n  get infoURL () {\n    return `${this.rootURL}novelview/infotop/ncode/${this.id}/`\n  }\n\n  get indexURL () {\n    return `${this.rootURL}${this.id}/`\n  }\n\n  async fetch () {\n    const url = this.infoURL\n    const doc = await fetchDOM(url)\n    const main = doc.getElementById('contents_main')\n    if (!main) {\n      console.log(doc.body.innerHTML)\n      throw new Error('failed to find contents')\n    }\n    {\n      // get title\n      const h1 = main.getElementsByTagName('h1')[0]\n      if (!h1) {\n        throw new Error('failed to parse header')\n      }\n      this.name = h1.textContent || undefined\n    }\n    {\n      // parse table\n      const lines = main.querySelectorAll('#noveltable1 > tbody > tr > td')\n      if (lines.length !== 4) {\n        throw new Error('failed to parse table')\n      }\n      this.description = trim(lines[0].textContent)\n      this.author = trim(lines[1].textContent)\n      this.keywords = flow(trim(lines[2].textContent)).then(\n        s => s.split(/\\s+/g)\n      ).value\n      this.genre = flow(trim(lines[3].textContent)).then(\n        s => s.split('〔', 1)[0]\n      ).value\n    }\n    {\n      // status\n      let completed = true\n      let size = 0\n      let type = main.querySelector('#noveltype_notend')\n      if (type) {\n        completed = false\n      } else {\n        type = main.querySelector('#noveltype')\n      }\n      if (!type || !type.textContent) {\n        throw new Error('failed to detect novel type')\n      }\n      if (type.textContent.trim() === '短編') {\n        size = 1\n      } else {\n        let node = type.nextSibling\n        if (!node || !node.textContent) {\n          throw new Error('failed to detect novel size')\n        }\n        let text = node.textContent.match(/(?<=全)\\d+(?=部分)/)\n        if (text && text[0]) {\n          size = parseInt(text[0], 10)\n        }\n      }\n      this.status = {\n        completed,\n        size\n      }\n    }\n    return\n  }\n\n  async fetchIndex () {\n    const url = this.indexURL\n    const doc = await fetchDOM(url)\n    let indexBox = doc.getElementsByClassName('index_box')[0]\n    if (!indexBox) {\n      throw new Error('failed to get index_box')\n    }\n    const chapters = []\n    let group: string | undefined\n    for (const node of indexBox.children) {\n      if (node.classList.contains('chapter_title')) {\n        group = trim(node.textContent)\n        continue\n      } else if (node.classList.contains('novel_sublist2')) {\n        if (node.children.length < 2) {\n          continue\n        }\n        let name: string | undefined\n        let url: URL | undefined\n        let timestamp: string | undefined\n        {\n          const col = node.children[0]\n          const a = col.firstElementChild\n          if (a && a.tagName === 'A') {\n            let link = a as HTMLLinkElement\n            name = trim(a.textContent)\n            url = new URL(link.href)\n          }\n        }\n        {\n          const col = node.children[1]\n          const span = col.firstElementChild\n          if (span) {\n            timestamp = trim(span.getAttribute('title'))\n          } else {\n            timestamp = trim(col.textContent)\n          }\n        }\n        if (name && url) {\n          let chapter = new SyosetuChapter({\n            url,\n            group,\n            name,\n            updateId: timestamp\n          })\n          chapters.push(chapter)\n        }\n      }\n    }\n    return chapters\n  }\n}\n\nconst fromURL = (url: URL) => {\n  try {\n    return new SyosetuNovel(url)\n  } catch {\n    return\n  }\n}\n\nconst Syosetu: Provider = {\n  acceptDomains: [\n    'ncode.syosetu.com',\n    'novel18.syosetu.com'\n  ],\n  fromURL\n}\n\nexport default Syosetu\n","/**\n * @file Syosetu provider\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { flow, trim } from '../../utils/flow'\nimport { JSDOM } from 'jsdom'\nimport * as mime from 'mime'\nimport fetch from '../../utils/syosetu-fetch'\n\n/* code */\nexport const fetchDOM = async (url: string) => {\n  let { window: { document: doc } } =\n    new JSDOM(await (await fetch(url)).text(), { url })\n  return doc\n}\n\nexport const fetchFile = async (url: string) => {\n  const res = await fetch(url)\n  const buf = await res.buffer()\n  {\n    const disp = res.headers.get('content-disposition')\n    if (disp) {\n      const name = trim(flow(disp.match(/; filename=\"[^\"]+\"/))\n        .then(a => a[1]).value)\n      if (name) {\n        return {\n          url,\n          buf,\n          name\n        }\n      }\n    }\n  }\n  {\n    const type = res.headers.get('content-type')\n    if (type) {\n      const ext = flow(trim(type.split(';')[0]))\n        .then(mime.getExtension).value\n      if (ext) {\n        return {\n          url,\n          buf,\n          name: `untitled.${ext}`\n        }\n      }\n    }\n  }\n  return {\n    url,\n    buf,\n    name: 'untitled'\n  }\n}\n","module.exports = require(\"mime\");","/**\n * @file Syosetu, override default options\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport cookie = require('cookie')\nimport nodeFetch, { Request, RequestInit, Headers } from 'node-fetch'\nimport pLimit from 'p-limit'\n/* -imports */\n\nconst syosetuLimit = pLimit(1)\n\nfunction fetch (href: string | Request, init?: RequestInit) {\n  let url = typeof href === 'string'\n    ? new URL(href.toString())\n    : new URL(href.url)\n  if (url.host.endsWith('syosetu.com')) {\n    if (!init) {\n      init = {}\n    }\n    const headers = new Headers(init.headers)\n    init.headers = headers\n    if (/^(novel18|noc|mnlt|mid)./.test(url.hostname)) {\n      headers.set('Cookie', cookie.serialize('over18', 'yes'))\n    }\n    return syosetuLimit(() => nodeFetch(href, init))\n  } else {\n    return nodeFetch(href, init)\n  }\n}\n\nexport default fetch\n","module.exports = require(\"cookie\");","module.exports = require(\"node-fetch\");","module.exports = require(\"filenamify\");","/**\n * @file Files management\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { trim, flow } from '../../utils/flow'\nimport * as pfs from '../../utils/pfs'\nimport * as path from 'path'\nimport makeDir = require('make-dir')\n/* code */\n\nconst sanitizeName = (name?: string) => {\n  return flow(trim(name))\n    .then(path.normalize)\n    .then(name => {\n      if (path.basename(name) !== name) {\n        return\n      }\n      if (name.startsWith('..')) {\n        return\n      }\n      return name\n    }).value\n}\n\ninterface FSItem {\n  parent?: Folder\n  path: string\n  real (): Promise<void>\n  remove (): Promise<void>\n  close (): Promise<void>\n  rename (name: string): Promise<void>\n}\n\nexport class Folder implements FSItem {\n  readonly children: Set<Folder | File> = new Set()\n  readonly parent?: Folder\n  /* private data */\n  private _dirname?: string\n  private _accessed = false\n\n  constructor (parent: Folder | undefined | null, name: string) {\n    if (parent) {\n      this.parent = parent\n      this._dirname = sanitizeName(name)\n    } else {\n      this._dirname = path.resolve(name)\n    }\n  }\n\n  get name () { return this._dirname }\n  get path (): string {\n    const { parent, _dirname } = this\n    if (!_dirname) {\n      throw new Error('Folder\\'s path is undefined')\n    }\n    if (parent) {\n      return path.join(parent.path, _dirname)\n    }\n    return _dirname\n  }\n\n  async real () {\n    if (this._accessed) {\n      return\n    } else {\n      await makeDir(this.path)\n      this._accessed = true\n    }\n  }\n\n  async close () {\n    delete this._dirname\n    if (this.parent) {\n      this.parent.children.delete(this)\n    }\n  }\n\n  async remove () {\n    const { children } = this\n    if (!children.size) {\n      throw new Error('folder is not empty')\n    }\n    const fpath = this.path\n    await this.close()\n    await pfs.rmdir(fpath)\n  }\n\n  get renameable () { return !!this.parent }\n  async rename (name: string) {\n    if (!this.parent) {\n      throw new Error('folder cannot be renamed')\n    }\n    const newName = sanitizeName(name)\n    if (!newName) {\n      throw new Error('folder name is invalid')\n    }\n    const oldName = this._dirname\n    this._dirname = newName\n    this._accessed = false\n    if (oldName) {\n      if (newName === oldName) {\n        return\n      }\n      try {\n        const parentDir = this.parent.path\n        await pfs.rename(\n          path.join(parentDir, oldName),\n          path.join(parentDir, newName))\n      } catch (err) {\n        if (err.code !== 'ENOENT') {\n          throw err\n        }\n      }\n    }\n    return\n  }\n\n  requestFolder (name: string): Folder {\n    const entry = new Folder(this, name)\n    this.children.add(entry)\n    return entry\n  }\n\n  requestFile (name: string): File {\n    const entry = new File(this, name)\n    this.children.add(entry)\n    return entry\n  }\n}\n\nexport class File implements FSItem {\n  readonly parent: Folder\n  private _filename?: string\n\n  constructor (parent: Folder, name: string) {\n    this.parent = parent\n    this._filename = sanitizeName(name)\n  }\n\n  get path (): string {\n    const { parent, _filename } = this\n    if (!_filename) {\n      throw new Error('filename is not set')\n    }\n    return path.join(parent.path, _filename)\n  }\n\n  async real () {\n    if (!this._filename) {\n      throw new Error('filename is not set')\n    }\n    return\n  }\n\n  async rename (name: string) {\n    const newName = sanitizeName(name)\n    if (!newName) {\n      throw new Error('filename is invalid')\n    }\n    const oldName = this._filename\n    this._filename = newName\n    if (oldName) {\n      if (newName === oldName) {\n        return\n      }\n      try {\n        const parentDir = this.parent.path\n        await pfs.rename(\n          path.join(parentDir, oldName),\n          path.join(parentDir, newName))\n      } catch (err) {\n        if (err.code !== 'ENOENT') {\n          throw err\n        }\n      }\n    }\n  }\n\n  async close () {\n    delete this._filename\n    this.parent.children.delete(this)\n  }\n\n  async access (mode?: number) {\n    return pfs.access(this.path, mode)\n  }\n\n  async remove () {\n    await this.real()\n    const fpath = this.path\n    await this.close()\n    try {\n      await pfs.unlink(fpath)\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        throw err\n      }\n    }\n  }\n\n  async read () {\n    await this.real()\n    return pfs.readFile(this.path)\n  }\n\n  async write (content: string | Buffer) {\n    await this.parent.real()\n    await this.real()\n    await pfs.writeFile(this.path, content)\n  }\n}\n","/**\n * @file Promised fs\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport * as fs from 'fs'\nimport { promisify } from 'util'\n\n/* code */\nexport { constants } from 'fs'\nexport const readFile = promisify(fs.readFile)\nexport const writeFile = promisify(fs.writeFile)\nexport const rename = promisify(fs.rename)\nexport const unlink = promisify(fs.unlink)\nexport const rmdir = promisify(fs.rmdir)\nexport const access = promisify(fs.access)\n","module.exports = require(\"util\");","module.exports = require(\"make-dir\");","/**\n * @file Episode\n * @author Dino <dinoabsoluto+dev@gmail.com>\n * @license\n * This file is part of translator-js.\n *\n * translator-js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * translator-js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with translator-js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* imports */\nimport { flow } from '../../utils/flow'\nimport { Chapter } from '../providers/common'\nimport { Context as AbstractContext } from '../providers/context'\nimport { Folder, File } from './fs'\nimport { gunzipSync, gzipSync } from 'zlib'\nimport pLimit from 'p-limit'\nimport throttle = require('lodash/throttle')\n/* code */\n\nexport type ProgressFn = (done: number, total: number) => void\nexport interface UpdateOptions {\n  progress?: ProgressFn\n  checkFs?: boolean\n}\n\nexport interface UpdateItem {\n  index: number\n  chapter: Chapter\n}\nexport interface UpdateReport {\n  updates: UpdateItem[]\n  news: UpdateItem[]\n}\n\nclass Context extends AbstractContext {\n  readonly files = new Map<string, string[] | Buffer>()\n  readonly prefix: string\n  constructor (prefix: string) {\n    super()\n    this.prefix = prefix\n  }\n\n  requestFile (name: string, get: (name: string) => string[] | Buffer) {\n    const { files, prefix } = this\n    flow(this.resolveName(`${prefix}${name}`.trim()))\n    .then(name => {\n      if (files.has(name)) {\n        return\n      }\n      files.set(name, get(name))\n    })\n  }\n}\n\ninterface EpisodeData {\n  groupId?: number\n  updateId?: string\n  files?: string[]\n}\n\ninterface EpisodeListData {\n  groups: string[]\n  episodes: EpisodeData[]\n}\n\nexport class EpisodeList {\n  readonly rootDir: Folder\n  data: EpisodeListData\n  ready: Promise<void>\n  private folders: Folder[]\n  private metaFile: File\n  private compressedCache: boolean\n  private pad0: number = 3\n  private saveThrottle = throttle(this.save.bind(this), 3000)\n  constructor (rootDir: Folder, options: {\n    compressedCache?: boolean\n    pad0?: number\n    data?: EpisodeListData\n  } = {}) {\n    this.rootDir = rootDir\n    this.data = options.data || {\n      groups: [],\n      episodes: []\n    }\n    this.compressedCache = !!options.compressedCache\n    this.pad0 = options.pad0 || this.pad0\n    const metaDir = rootDir.requestFolder('!meta')\n    const metaFile = metaDir.requestFile(\n      this.compressedCache ? '!cache.json.gz' : '!cache.json')\n    const folders = [\n      rootDir.requestFolder('0'.padStart(this.pad0, '0'))\n    ]\n    this.folders = folders\n    this.metaFile = metaFile\n    this.ready = this.load()\n  }\n\n  async updateWith (newData: Chapter[], options: UpdateOptions = {}) {\n    const { data: { episodes } } = this\n    const { groups, chapters } = this.preprocess(newData)\n    const { progress } = options\n    const report: UpdateReport = {\n      updates: [],\n      news: []\n    }\n    const limit = pLimit(2)\n    const oldLength = episodes.length\n    await this.updateGroups(groups)\n    const tasks: UpdateItem[] = []\n    for (const [index, chapter] of chapters.entries()) {\n      if (await this.pingEpisode(index, chapter, options)) {\n        const item: UpdateItem = {\n          index, chapter\n        }\n        tasks.push(item)\n        if (index < oldLength) {\n          report.updates.push(item)\n        } else {\n          report.news.push(item)\n        }\n      }\n    }\n    let count = 0\n    const length = tasks.length\n    if (progress) {\n      progress(0, length)\n    }\n    await Promise.all(tasks.map(({ index, chapter }) => {\n      return limit(async () => {\n        await this.updateEpisode(index, chapter, options)\n        await this.saveThrottle()\n        if (progress) {\n          progress(++count, length)\n        }\n      })\n    }))\n    episodes.length = chapters.length\n    await this.saveThrottle.flush()\n    return report\n  }\n\n  private encode (data: object) {\n    if (!this.compressedCache) {\n      return JSON.stringify(data, null, 1)\n    } else {\n      return gzipSync(JSON.stringify(data))\n    }\n  }\n  private decode (data: Buffer) {\n    if (!this.compressedCache) {\n      return JSON.parse(data.toString())\n    } else {\n      return JSON.parse(gunzipSync(data).toString())\n    }\n  }\n\n  private async updateGroups (groups: string[]) {\n    const { folders, rootDir, data } = this\n    for (const [index, group] of groups.entries()) {\n      const id = index + 1\n      let folder = folders[id]\n      if (!folder) {\n        folder = rootDir.requestFolder(group)\n        folders[id] = folder\n      } else {\n        if (group !== folder.name) {\n          await folder.rename(group)\n        }\n      }\n    }\n    data.groups = groups\n  }\n\n  private async isEpisodeUptodate (\n    ep: EpisodeData,\n    ch: Chapter & EpisodeData,\n    options: UpdateOptions\n  ): Promise<boolean> {\n    if (!ep.files || !ep.files.length) {\n      return false\n    }\n    if (ch.updateId && ep.updateId !== ch.updateId) {\n      return false\n    }\n    if (ch.groupId && ep.groupId !== ch.groupId) {\n      return false\n    }\n    const folder = this.folders[ep.groupId || 0]\n    if (!folder) {\n      throw new Error(`Folder must not be ${folder}`)\n    }\n    if (!options.checkFs) {\n      return true\n    }\n    try {\n      for (const fpath of ep.files) {\n        const file = folder.requestFile(fpath)\n        await file.access()\n        await file.close()\n      }\n      return true\n    } catch {\n      return false\n    }\n  }\n\n  private async pingEpisode (\n    index: number,\n    ch: Chapter & EpisodeData,\n    options: UpdateOptions\n  ) {\n    const { data: { episodes } } = this\n    let ep = episodes[index]\n    if (!ep) {\n      ep = {}\n      episodes[index] = ep\n    }\n    if (await this.isEpisodeUptodate(ep, ch, options)) {\n      return false\n    }\n    return ep\n  }\n\n  private async updateEpisode (\n    index: number,\n    ch: Chapter & EpisodeData,\n    options: UpdateOptions\n  ) {\n    const ep = await this.pingEpisode(index, ch, options)\n    if (!ep) {\n      return\n    }\n    if (ep.files) {\n      const folder = this.folders[ep.groupId || 0]\n      // remove old files\n      await Promise.all(ep.files.map(file => folder.requestFile(file).remove()))\n      delete ep.files\n    }\n    await ch.fetch()\n    ep.groupId = ch.groupId\n    ep.updateId = ch.updateId\n    const folder = this.folders[ep.groupId || 0]\n    if (!folder) {\n      throw new Error(`Folder must not be ${folder}`)\n    }\n    const context = new Context(\n      `${(index + 1).toString().padStart(this.pad0, '0')} `)\n    if (ch.content) {\n      ch.content(context)\n      delete ch.content\n    }\n    // write files\n    const files = []\n    for (const [name, data] of context.files) {\n      let buf: Buffer\n      if (data instanceof Buffer) {\n        buf = data\n      } else {\n        buf = flow(data.join('\\n\\n---\\n\\n'))\n          .then(text => {\n            if (text[text.length - 1] !== '\\n') {\n              return text + '\\n'\n            } else {\n              return text\n            }\n          }).then(Buffer.from).value\n      }\n      files.push(name)\n      const file = folder.requestFile(name)\n      await file.write(buf)\n      await file.close()\n    }\n    if (files.length) {\n      ep.files = files\n    }\n  }\n\n  private preprocess (chapters: Chapter[]) {\n    let groupId = 0\n    let groupName: string | undefined\n    const groups = []\n    let count = 1\n    for (const chapter of chapters) {\n      const ch: Chapter & EpisodeData = chapter\n      ++count\n      if (ch.group !== groupName || count > 50) {\n        count = 1\n        groupId = groups.length + 1\n        groups.push(`${\n          groupId.toString().padStart(this.pad0, '0')} ${\n          ch.group || ''}`.trim())\n        groupName = ch.group\n      }\n      ch.groupId = groupId\n    }\n    return {\n      groups,\n      chapters\n    }\n  }\n\n  private async load () {\n    const { metaFile } = this\n    try {\n      const cache = await this.decode(await metaFile.read())\n      const { data } = this\n      await this.updateGroups(cache.groups)\n      data.episodes = cache.episodes || []\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        throw err\n      }\n    }\n  }\n\n  async save () {\n    const { metaFile } = this\n    await metaFile.write(await this.encode(this.data))\n  }\n}\n","module.exports = require(\"zlib\");","module.exports = require(\"lodash/throttle\");"],"sourceRoot":""}